non-closed actor: (ActorE
  this
  (balance balance (VarE initialBalance) Var Private)
  (getBalance
    getBalance
    (BlockE
      (FuncD
        (shared  1 -> 0)
        getBalance
        (VarP $8)
        ()
        (BlockE
          (LetD (TupP) (TupE))
          (ExpD
            (CallE
              ( 1 -> 0)
              (BlockE
                (FuncD
                  ( 1 -> 0)
                  $lambda
                  (VarP $0)
                  ()
                  (CallE
                    ( 1 -> 0)
                    (VarE $0)
                    (BlockE
                      (ExpD (RetE (CallE ( 1 -> 0) (VarE $0) (VarE balance))))
                      Int
                    )
                  )
                )
                (Int -> ()) -> ()
              )
              (BlockE
                (FuncD
                  ( 1 -> 0)
                  $lambda
                  (VarP $9)
                  ()
                  (CallE (shared  1 -> 0) (VarE $8) (VarE $9))
                )
                Int -> ()
              )
            )
          )
          ()
        )
      )
      shared (shared Int -> ()) -> ()
    )
    Const
    Public
  )
  (split
    split
    (BlockE
      (FuncD
        (shared  2 -> 0)
        split
        (TupP (VarP amount) (VarP $10))
        ()
        (BlockE
          (ExpD
            (CallE
              ( 1 -> 0)
              (BlockE
                (FuncD
                  ( 1 -> 0)
                  $lambda
                  (VarP $1)
                  ()
                  (CallE
                    ( 1 -> 0)
                    (VarE $1)
                    (BlockE
                      (ExpD
                        (AssignE
                          (VarE balance)
                          (BinE Int (VarE balance) SubOp (VarE amount))
                        )
                      )
                      (ExpD
                        (RetE
                          (CallE
                            ( 1 -> 0)
                            (VarE $1)
                            (CallE (class  1 -> 1) (VarE Account) (VarE amount))
                          )
                        )
                      )
                      Account
                    )
                  )
                )
                (Account -> ()) -> ()
              )
              (BlockE
                (FuncD
                  ( 1 -> 0)
                  $lambda
                  (VarP $11)
                  ()
                  (CallE (shared  1 -> 0) (VarE $10) (VarE $11))
                )
                Account -> ()
              )
            )
          )
          ()
        )
      )
      shared (Int, shared Account -> ()) -> ()
    )
    Const
    Public
  )
  (join
    join
    (BlockE
      (FuncD
        (shared  1 -> 0)
        join
        (VarP account)
        ()
        (BlockE
          (ExpD (AssertE (IsE (VarE account) (VarE Account))))
          (LetD (VarP amount) (VarE balance))
          (ExpD (AssignE (VarE balance) (LitE (IntLit 0))))
          (ExpD
            (CallE
              (shared  2 -> 0)
              (ActorDotE (VarE account) credit)
              (TupE (VarE amount) (VarE Account))
            )
          )
          ()
        )
      )
      shared (like Account) -> ()
    )
    Const
    Public
  )
  (credit
    credit
    (BlockE
      (FuncD
        (shared  2 -> 0)
        credit
        (TupP (VarP amount) (VarP caller))
        ()
        (BlockE
          (ExpD (AssertE (IsE (VarE this) (VarE caller))))
          (ExpD
            (AssignE
              (VarE balance)
              (BinE Int (VarE balance) AddOp (VarE amount))
            )
          )
          ()
        )
      )
      shared (Int, Class) -> ()
    )
    Const
    Public
  )
  (isCompatible
    isCompatible
    (BlockE
      (FuncD
        (shared  2 -> 0)
        isCompatible
        (TupP (VarP account) (VarP $12))
        ()
        (BlockE
          (ExpD
            (CallE
              ( 1 -> 0)
              (BlockE
                (FuncD
                  ( 1 -> 0)
                  $lambda
                  (VarP $2)
                  ()
                  (CallE
                    ( 1 -> 0)
                    (VarE $2)
                    (BlockE
                      (ExpD
                        (RetE
                          (CallE
                            ( 1 -> 0)
                            (VarE $2)
                            (IsE (VarE account) (VarE Account))
                          )
                        )
                      )
                      Bool
                    )
                  )
                )
                (Bool -> ()) -> ()
              )
              (BlockE
                (FuncD
                  ( 1 -> 0)
                  $lambda
                  (VarP $13)
                  ()
                  (CallE (shared  1 -> 0) (VarE $12) (VarE $13))
                )
                Bool -> ()
              )
            )
          )
          ()
        )
      )
      shared (like Account, shared Bool -> ()) -> ()
    )
    Const
    Public
  )
  Account
)
