compile_exp: (PrimE Array.tabular)
compile_exp: (PrimE Array.init)
compile_exp: (AsyncE
  (BlockE
    (LetD (VarP trx) (AwaitE (CallE (DotE (VarE sender) split) (VarE amount))))
    (ExpD (CallE (DotE (VarE receiver) join) (VarE trx)))
  )
)
compile_exp: (AsyncE (BlockE (ExpD (RetE (VarE balance)))))
compile_exp: (AsyncE
  (BlockE
    (ExpD (AssignE (VarE balance) (BinE (VarE balance) SubOp (VarE amount))))
    (ExpD (RetE (CallE (VarE Account) (VarE amount))))
  )
)
compile_exp: (AsyncE (BlockE (ExpD (RetE (IsE (VarE account) (VarE Account))))))
