# Makefile for actorscript test cases

ASC ?= ../../src/asc
WASM ?= wasm
WASM2WAT ?= wasm2wat
ASC_FLAGS ?=
VERBOSE ?= 0

OKDIR = ok
OUTDIR = _out

TESTS = $(basename $(wildcard *.as))

SHELL := bash

GENERATED = $(sort $(foreach suffix,$(SUFFIXES), $(addsuffix $(suffix), $(TESTS))))

GENERATED_OUT = $(addprefix $(OUTDIR)/, $(GENERATED))

all: stats

$(OUTDIR):
	mkdir -p $@

$(OUTDIR)/%.tc: %.as $(ASC) Makefile
	@echo -n [check] $*
	@mkdir -p $(OUTDIR)
	@$(ASC) $(ASC_FLAGS) --check $< > $@ 2>&1 || true
	@if [ -s $@ ];  then echo " ✗"; else echo " ✓"; fi

$(OUTDIR)/%.run: %.as $(ASC) $(OUTDIR)/%.tc
	@if [ -s _out/$*.tc ]; \
	then > $@; \
	else \
	  echo "[run]   $*"; \
	  $(ASC) $(ASC_FLAGS) -r -v $< > $@ 2>&1 || true; \
	fi

$(OUTDIR)/%.wasm $(OUTDIR)/%.wasm.stderr: %.as $(ASC) $(OUTDIR)/%.tc
	@if [ -s _out/$*.tc ]; \
	then > $(OUTDIR)/$*.wasm; > $(OUTDIR)/$*.wasm.stderr; \
	else \
          echo "[comp]  $*"; \
	  $(ASC) $(ASC_FLAGS) --map -c $< 2> $(OUTDIR)/$*.wasm.stderr || true; \
	  mv $*.wasm $*.wasm.map $(OUTDIR)/ || true; \
	fi

$(OUTDIR)/%.wat: $(OUTDIR)/%.wasm
	@if [ -s $< ]; \
	then \
	 $(WASM2WAT) --no-check --generate-names $< > $@ 2>&1 || true; \
	 else > $@; \
	fi

$(OUTDIR)/%.wasm-run: $(OUTDIR)/%.wasm
	@if [ -s $< ]; \
	then \
	 echo "[exec]  $*";\
	 $(WASM) $< > $@ 2>&1 || true; \
	 else > $@; \
	fi

$(OUTDIR)/%.dsh-run: $(OUTDIR)/%.wasm
	@if [ -s $< ]; \
	then \
	 echo "[dsh]   $*";\
	 ./run.sh $< > $@ 2>&1 || true; \
	else > $@; \
	fi

$(OKDIR)/%.ok:
	@echo "$@ missing"
	@echo "Please run 'make accept' or 'make $*.refresh'"
	@exit 1

$(OUTDIR)/%.diff: $(OKDIR)/%.ok $(OUTDIR)/%
	@diff -u $(OKDIR)/$*.ok $(OUTDIR)/$* > $@ || true
	@if [ $(VERBOSE) -ne 0 ]; then cat $@; fi


$(addsuffix .refresh, $(TESTS)) : %.refresh: $(addsuffix .refresh, $(addprefix %, $(SUFFIXES)))

$(addsuffix .refresh, $(GENERATED)) : %.refresh : $(OUTDIR)/%
	@mkdir -p $(OKDIR) && cp $< $(OKDIR)/$*.ok


stats: $(addsuffix .diff,$(GENERATED_OUT))
	@failed=""; \
	for test in $(GENERATED); do \
	  if [ -s $(OUTDIR)/$$test.diff ]; then \
	    failed="$$failed\n $$test"; \
	  fi; \
	done; \
	if [ -z "$$failed" ]; \
	then echo "All passed!"; \
	else echo -e "Failed tests:$$failed"; exit 1; \
	fi

diffs: $(addsuffix .diff,$(GENERATED_OUT))
	@for test in $(GENERATED); do \
	  if [ -s $(OUTDIR)/$$test.diff ]; then \
	    cat $(OUTDIR)/$$test.diff; \
	  fi; \
	done

# refresh all
current: $(addsuffix .refresh, $(GENERATED))
accept: current

js:
	NODE_PATH=../ node node-test.js

clean:
	rm -rf $(OUTDIR)

.PHONY: stats current accept all %.refresh

FORCE:

.PRECIOUS: $(GENERATED_OUT)


