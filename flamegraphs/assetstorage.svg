<?xml version="1.0" standalone="no"?>
<!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd">
<svg version="1.1" width="1200" height="246" onload="init(evt)" viewBox="0 0 1200 246" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink">
<!-- Flame graph stack visualization. See https://github.com/brendangregg/FlameGraph for latest version, and http://www.brendangregg.com/flamegraphs.html for examples. -->
<!-- NOTES:  -->
<defs>
	<linearGradient id="background" y1="0" y2="1" x1="0" x2="0" >
		<stop stop-color="#eeeeee" offset="5%" />
		<stop stop-color="#eeeeb0" offset="95%" />
	</linearGradient>
</defs>
<style type="text/css">
	text { font-family:Verdana; font-size:12px; fill:rgb(0,0,0); }
	#search { opacity:0.1; cursor:pointer; }
	#search:hover, #search.show { opacity:1; }
	#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
	#title { text-anchor:middle; font-size:17px}
	#unzoom { cursor:pointer; }
	#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
	.hide { display:none; }
	.parent { opacity:0.5; }
</style>
<script type="text/ecmascript">
<![CDATA[
	"use strict";
	var details, searchbtn, unzoombtn, matchedtxt, svg, searching;
	function init(evt) {
		details = document.getElementById("details").firstChild;
		searchbtn = document.getElementById("search");
		unzoombtn = document.getElementById("unzoom");
		matchedtxt = document.getElementById("matched");
		svg = document.getElementsByTagName("svg")[0];
		searching = 0;
	}

	window.addEventListener("click", function(e) {
		var target = find_group(e.target);
		if (target) {
			if (target.nodeName == "a") {
				if (e.ctrlKey === false) return;
				e.preventDefault();
			}
			if (target.classList.contains("parent")) unzoom();
			zoom(target);
		}
		else if (e.target.id == "unzoom") unzoom();
		else if (e.target.id == "search") search_prompt();
	}, false)

	// mouse-over for info
	// show
	window.addEventListener("mouseover", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = "Function: " + g_to_text(target);
	}, false)

	// clear
	window.addEventListener("mouseout", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = ' ';
	}, false)

	// ctrl-F for search
	window.addEventListener("keydown",function (e) {
		if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
			e.preventDefault();
			search_prompt();
		}
	}, false)

	// functions
	function find_child(node, selector) {
		var children = node.querySelectorAll(selector);
		if (children.length) return children[0];
		return;
	}
	function find_group(node) {
		var parent = node.parentElement;
		if (!parent) return;
		if (parent.id == "frames") return node;
		return find_group(parent);
	}
	function orig_save(e, attr, val) {
		if (e.attributes["_orig_" + attr] != undefined) return;
		if (e.attributes[attr] == undefined) return;
		if (val == undefined) val = e.attributes[attr].value;
		e.setAttribute("_orig_" + attr, val);
	}
	function orig_load(e, attr) {
		if (e.attributes["_orig_"+attr] == undefined) return;
		e.attributes[attr].value = e.attributes["_orig_" + attr].value;
		e.removeAttribute("_orig_"+attr);
	}
	function g_to_text(e) {
		var text = find_child(e, "title").firstChild.nodeValue;
		return (text)
	}
	function g_to_func(e) {
		var func = g_to_text(e);
		// if there's any manipulation we want to do to the function
		// name before it's searched, do it here before returning.
		return (func);
	}
	function update_text(e) {
		var r = find_child(e, "rect");
		var t = find_child(e, "text");
		var w = parseFloat(r.attributes.width.value) -3;
		var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
		t.attributes.x.value = parseFloat(r.attributes.x.value) + 3;

		// Smaller than this size won't fit anything
		if (w < 2 * 12 * 0.59) {
			t.textContent = "";
			return;
		}

		t.textContent = txt;
		// Fit in full text width
		if (/^ *$/.test(txt) || t.getSubStringLength(0, txt.length) < w)
			return;

		for (var x = txt.length - 2; x > 0; x--) {
			if (t.getSubStringLength(0, x + 2) <= w) {
				t.textContent = txt.substring(0, x) + "..";
				return;
			}
		}
		t.textContent = "";
	}

	// zoom
	function zoom_reset(e) {
		if (e.attributes != undefined) {
			orig_load(e, "x");
			orig_load(e, "width");
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_reset(c[i]);
		}
	}
	function zoom_child(e, x, ratio) {
		if (e.attributes != undefined) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = (parseFloat(e.attributes.x.value) - x - 10) * ratio + 10;
				if (e.tagName == "text")
					e.attributes.x.value = find_child(e.parentNode, "rect[x]").attributes.x.value + 3;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseFloat(e.attributes.width.value) * ratio;
			}
		}

		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_child(c[i], x - 10, ratio);
		}
	}
	function zoom_parent(e) {
		if (e.attributes) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = 10;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseInt(svg.width.baseVal.value) - (10 * 2);
			}
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_parent(c[i]);
		}
	}
	function zoom(node) {
		var attr = find_child(node, "rect").attributes;
		var width = parseFloat(attr.width.value);
		var xmin = parseFloat(attr.x.value);
		var xmax = parseFloat(xmin + width);
		var ymin = parseFloat(attr.y.value);
		var ratio = (svg.width.baseVal.value - 2 * 10) / width;

		// XXX: Workaround for JavaScript float issues (fix me)
		var fudge = 0.0001;

		unzoombtn.classList.remove("hide");

		var el = document.getElementById("frames").children;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var a = find_child(e, "rect").attributes;
			var ex = parseFloat(a.x.value);
			var ew = parseFloat(a.width.value);
			var upstack;
			// Is it an ancestor
			if (0 == 0) {
				upstack = parseFloat(a.y.value) > ymin;
			} else {
				upstack = parseFloat(a.y.value) < ymin;
			}
			if (upstack) {
				// Direct ancestor
				if (ex <= xmin && (ex+ew+fudge) >= xmax) {
					e.classList.add("parent");
					zoom_parent(e);
					update_text(e);
				}
				// not in current path
				else
					e.classList.add("hide");
			}
			// Children maybe
			else {
				// no common path
				if (ex < xmin || ex + fudge >= xmax) {
					e.classList.add("hide");
				}
				else {
					zoom_child(e, xmin, ratio);
					update_text(e);
				}
			}
		}
	}
	function unzoom() {
		unzoombtn.classList.add("hide");
		var el = document.getElementById("frames").children;
		for(var i = 0; i < el.length; i++) {
			el[i].classList.remove("parent");
			el[i].classList.remove("hide");
			zoom_reset(el[i]);
			update_text(el[i]);
		}
	}

	// search
	function reset_search() {
		var el = document.querySelectorAll("#frames rect");
		for (var i = 0; i < el.length; i++) {
			orig_load(el[i], "fill")
		}
	}
	function search_prompt() {
		if (!searching) {
			var term = prompt("Enter a search term (regexp " +
			    "allowed, eg: ^ext4_)", "");
			if (term != null) {
				search(term)
			}
		} else {
			reset_search();
			searching = 0;
			searchbtn.classList.remove("show");
			searchbtn.firstChild.nodeValue = "Search"
			matchedtxt.classList.add("hide");
			matchedtxt.firstChild.nodeValue = ""
		}
	}
	function search(term) {
		var re = new RegExp(term);
		var el = document.getElementById("frames").children;
		var matches = new Object();
		var maxwidth = 0;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var func = g_to_func(e);
			var rect = find_child(e, "rect");
			if (func == null || rect == null)
				continue;

			// Save max width. Only works as we have a root frame
			var w = parseFloat(rect.attributes.width.value);
			if (w > maxwidth)
				maxwidth = w;

			if (func.match(re)) {
				// highlight
				var x = parseFloat(rect.attributes.x.value);
				orig_save(rect, "fill");
				rect.attributes.fill.value = "rgb(230,0,230)";

				// remember matches
				if (matches[x] == undefined) {
					matches[x] = w;
				} else {
					if (w > matches[x]) {
						// overwrite with parent
						matches[x] = w;
					}
				}
				searching = 1;
			}
		}
		if (!searching)
			return;

		searchbtn.classList.add("show");
		searchbtn.firstChild.nodeValue = "Reset Search";

		// calculate percent matched, excluding vertical overlap
		var count = 0;
		var lastx = -1;
		var lastw = 0;
		var keys = Array();
		for (k in matches) {
			if (matches.hasOwnProperty(k))
				keys.push(k);
		}
		// sort the matched frames by their x location
		// ascending, then width descending
		keys.sort(function(a, b){
			return a - b;
		});
		// Step through frames saving only the biggest bottom-up frames
		// thanks to the sort order. This relies on the tree property
		// where children are always smaller than their parents.
		var fudge = 0.0001;	// JavaScript floating point
		for (var k in keys) {
			var x = parseFloat(keys[k]);
			var w = matches[keys[k]];
			if (x >= lastx + lastw - fudge) {
				count += w;
				lastx = x;
				lastw = w;
			}
		}
		// display matched percent
		matchedtxt.classList.remove("hide");
		var pct = 100 * count / maxwidth;
		if (pct != 100) pct = pct.toFixed(1)
		matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
	}
]]>
</script>
<rect x="0.0" y="0" width="1200.0" height="246.0" fill="url(#background)"  />
<text id="title" x="600.00" y="24" >assetstorage.mo</text>
<text id="details" x="10.00" y="229" > </text>
<text id="unzoom" x="10.00" y="24" class="hide">Reset Zoom</text>
<text id="search" x="1090.00" y="24" >Search</text>
<text id="matched" x="1090.00" y="229" > </text>
<g id="frames">
<g >
<title>opt_project (15 samples, 0.04%)</title><rect x="577.8" y="101" width="0.5" height="15.0" fill="rgb(241,186,39)" rx="2" ry="2" />
<text  x="580.84" y="111.5" ></text>
</g>
<g >
<title>text_to_buf (86 samples, 0.21%)</title><rect x="410.1" y="85" width="2.5" height="15.0" fill="rgb(242,171,41)" rx="2" ry="2" />
<text  x="413.08" y="95.5" ></text>
</g>
<g >
<title>motoko_rts::gc::mark_compact::bitmap::alloc_bitmap::hf8e4dc5d7e94e131 (184 samples, 0.45%)</title><rect x="221.3" y="133" width="5.3" height="15.0" fill="rgb(230,127,28)" rx="2" ry="2" />
<text  x="224.27" y="143.5" ></text>
</g>
<g >
<title>opt_inject (15 samples, 0.04%)</title><rect x="369.1" y="149" width="0.5" height="15.0" fill="rgb(241,186,39)" rx="2" ry="2" />
<text  x="372.12" y="159.5" ></text>
</g>
<g >
<title>parse_idl_header (902 samples, 2.21%)</title><rect x="774.3" y="149" width="26.1" height="15.0" fill="rgb(243,149,41)" rx="2" ry="2" />
<text  x="777.30" y="159.5" >p..</text>
</g>
<g >
<title>parse_idl_header (391 samples, 0.96%)</title><rect x="678.6" y="149" width="11.3" height="15.0" fill="rgb(243,149,41)" rx="2" ry="2" />
<text  x="681.63" y="159.5" ></text>
</g>
<g >
<title>motoko_rts::memory::ic::grow_memory::h8e98dd1e37abaf8a (22 samples, 0.05%)</title><rect x="739.1" y="85" width="0.7" height="15.0" fill="rgb(237,127,35)" rx="2" ry="2" />
<text  x="742.12" y="95.5" ></text>
</g>
<g >
<title>@serialize&lt;vt&gt; (827 samples, 2.03%)</title><rect x="398.9" y="133" width="23.9" height="15.0" fill="rgb(237,156,36)" rx="2" ry="2" />
<text  x="401.89" y="143.5" >@..</text>
</g>
<g >
<title>motoko_rts::memory::ic::grow_memory::h8e98dd1e37abaf8a (11 samples, 0.03%)</title><rect x="526.9" y="37" width="0.3" height="15.0" fill="rgb(237,127,35)" rx="2" ry="2" />
<text  x="529.90" y="47.5" ></text>
</g>
<g >
<title>@buffer_size&lt;t&gt; (37 samples, 0.09%)</title><rect x="405.3" y="101" width="1.1" height="15.0" fill="rgb(244,118,43)" rx="2" ry="2" />
<text  x="408.31" y="111.5" ></text>
</g>
<g >
<title>next (1,462 samples, 3.58%)</title><rect x="533.6" y="101" width="42.3" height="15.0" fill="rgb(230,219,27)" rx="2" ry="2" />
<text  x="536.64" y="111.5" >next</text>
</g>
<g >
<title>motoko_rts::gc::mark_compact::bitmap::BitmapIter::next::h8eb8f39069f8f186 (879 samples, 2.15%)</title><rect x="1081.3" y="133" width="25.4" height="15.0" fill="rgb(246,127,45)" rx="2" ry="2" />
<text  x="1084.29" y="143.5" >m..</text>
</g>
<g >
<title>memset (104 samples, 0.25%)</title><rect x="223.3" y="117" width="3.0" height="15.0" fill="rgb(237,144,35)" rx="2" ry="2" />
<text  x="226.26" y="127.5" ></text>
</g>
<g >
<title>motoko_rts::memory::ic::grow_memory::h8e98dd1e37abaf8a (22 samples, 0.05%)</title><rect x="303.3" y="133" width="0.6" height="15.0" fill="rgb(237,127,35)" rx="2" ry="2" />
<text  x="306.31" y="143.5" ></text>
</g>
<g >
<title>obj_idx&lt;6&gt; (34 samples, 0.08%)</title><rect x="450.8" y="149" width="0.9" height="15.0" fill="rgb(240,139,39)" rx="2" ry="2" />
<text  x="453.76" y="159.5" ></text>
</g>
<g >
<title>Array.idx (12 samples, 0.03%)</title><rect x="521.4" y="69" width="0.3" height="15.0" fill="rgb(247,150,46)" rx="2" ry="2" />
<text  x="524.40" y="79.5" ></text>
</g>
<g >
<title>alloc_words (336 samples, 0.82%)</title><rect x="430.0" y="117" width="9.8" height="15.0" fill="rgb(241,128,39)" rx="2" ry="2" />
<text  x="433.04" y="127.5" ></text>
</g>
<g >
<title>@deserialize&lt;tB&gt; (2,201 samples, 5.40%)</title><rect x="741.6" y="165" width="63.6" height="15.0" fill="rgb(245,176,45)" rx="2" ry="2" />
<text  x="744.58" y="175.5" >@deser..</text>
</g>
<g >
<title>next (1,684 samples, 4.13%)</title><rect x="529.6" y="117" width="48.7" height="15.0" fill="rgb(230,219,27)" rx="2" ry="2" />
<text  x="532.56" y="127.5" >next</text>
</g>
<g >
<title>motoko_rts::gc::mark_compact::bitmap::BitmapIter::next::h8eb8f39069f8f186 (587 samples, 1.44%)</title><rect x="204.3" y="133" width="17.0" height="15.0" fill="rgb(246,127,45)" rx="2" ry="2" />
<text  x="207.28" y="143.5" ></text>
</g>
<g >
<title>reply_with_data (4 samples, 0.01%)</title><rect x="638.1" y="133" width="0.1" height="15.0" fill="rgb(235,175,33)" rx="2" ry="2" />
<text  x="641.10" y="143.5" ></text>
</g>
<g >
<title>@deserialize&lt;t&gt; (1,109 samples, 2.72%)</title><rect x="660.3" y="165" width="32.1" height="15.0" fill="rgb(244,176,43)" rx="2" ry="2" />
<text  x="663.29" y="175.5" >@d..</text>
</g>
<g >
<title>alloc_words (42 samples, 0.10%)</title><rect x="806.9" y="165" width="1.2" height="15.0" fill="rgb(241,128,39)" rx="2" ry="2" />
<text  x="809.87" y="175.5" ></text>
</g>
<g >
<title>canister_init (12,463 samples, 30.55%)</title><rect x="10.0" y="181" width="360.5" height="15.0" fill="rgb(236,106,34)" rx="2" ry="2" />
<text  x="13.00" y="191.5" >canister_init</text>
</g>
<g >
<title>motoko_rts::memory::ic::grow_memory::h8e98dd1e37abaf8a (22 samples, 0.05%)</title><rect x="591.6" y="101" width="0.6" height="15.0" fill="rgb(237,127,35)" rx="2" ry="2" />
<text  x="594.58" y="111.5" ></text>
</g>
<g >
<title>Text.compare_eq (281 samples, 0.69%)</title><rect x="641.9" y="101" width="8.1" height="15.0" fill="rgb(239,187,38)" rx="2" ry="2" />
<text  x="644.86" y="111.5" ></text>
</g>
<g >
<title>obj_idx&lt;0&gt; (17 samples, 0.04%)</title><rect x="529.1" y="101" width="0.5" height="15.0" fill="rgb(247,139,46)" rx="2" ry="2" />
<text  x="532.07" y="111.5" ></text>
</g>
<g >
<title>motoko_rts::memory::ic::grow_memory::h8e98dd1e37abaf8a (11 samples, 0.03%)</title><rect x="1111.7" y="117" width="0.3" height="15.0" fill="rgb(237,127,35)" rx="2" ry="2" />
<text  x="1114.72" y="127.5" ></text>
</g>
<g >
<title>motoko_rts::memory::ic::grow_memory::h8e98dd1e37abaf8a (22 samples, 0.05%)</title><rect x="425.9" y="117" width="0.7" height="15.0" fill="rgb(237,127,35)" rx="2" ry="2" />
<text  x="428.94" y="127.5" ></text>
</g>
<g >
<title>B_ge (11 samples, 0.03%)</title><rect x="528.3" y="85" width="0.3" height="15.0" fill="rgb(241,124,39)" rx="2" ry="2" />
<text  x="531.26" y="95.5" ></text>
</g>
<g >
<title>alloc_words (84 samples, 0.21%)</title><rect x="301.5" y="149" width="2.4" height="15.0" fill="rgb(241,128,39)" rx="2" ry="2" />
<text  x="304.51" y="159.5" ></text>
</g>
<g >
<title>can_tag_i64 (8 samples, 0.02%)</title><rect x="516.5" y="101" width="0.3" height="15.0" fill="rgb(234,106,32)" rx="2" ry="2" />
<text  x="519.54" y="111.5" ></text>
</g>
<g >
<title>alloc_words (168 samples, 0.41%)</title><rect x="445.9" y="133" width="4.9" height="15.0" fill="rgb(241,128,39)" rx="2" ry="2" />
<text  x="448.90" y="143.5" ></text>
</g>
<g >
<title>motoko_rts::memory::ic::grow_memory::h8e98dd1e37abaf8a (11 samples, 0.03%)</title><rect x="226.3" y="117" width="0.3" height="15.0" fill="rgb(237,127,35)" rx="2" ry="2" />
<text  x="229.27" y="127.5" ></text>
</g>
<g >
<title>motoko_rts::types::Blob::shrink::hb14bcc75ff1dba50 (90 samples, 0.22%)</title><rect x="362.4" y="117" width="2.6" height="15.0" fill="rgb(230,127,28)" rx="2" ry="2" />
<text  x="365.41" y="127.5" ></text>
</g>
<g >
<title>memcpy (1,050 samples, 2.57%)</title><rect x="173.9" y="133" width="30.4" height="15.0" fill="rgb(248,144,48)" rx="2" ry="2" />
<text  x="176.91" y="143.5" >me..</text>
</g>
<g >
<title>alloc_array (63 samples, 0.15%)</title><rect x="525.4" y="69" width="1.8" height="15.0" fill="rgb(239,128,37)" rx="2" ry="2" />
<text  x="528.39" y="79.5" ></text>
</g>
<g >
<title>B_gt (11 samples, 0.03%)</title><rect x="528.6" y="85" width="0.3" height="15.0" fill="rgb(232,124,30)" rx="2" ry="2" />
<text  x="531.58" y="95.5" ></text>
</g>
<g >
<title>alloc_words (84 samples, 0.21%)</title><rect x="732.2" y="85" width="2.4" height="15.0" fill="rgb(241,128,39)" rx="2" ry="2" />
<text  x="735.20" y="95.5" ></text>
</g>
<g >
<title>alloc_words (462 samples, 1.13%)</title><rect x="286.7" y="133" width="13.4" height="15.0" fill="rgb(241,128,39)" rx="2" ry="2" />
<text  x="289.70" y="143.5" ></text>
</g>
<g >
<title>retrieve (2,452 samples, 6.01%)</title><rect x="625.0" y="181" width="71.0" height="15.0" fill="rgb(240,162,39)" rx="2" ry="2" />
<text  x="628.02" y="191.5" >retrieve</text>
</g>
<g >
<title>leb128_decode (67 samples, 0.16%)</title><rect x="772.4" y="149" width="1.9" height="15.0" fill="rgb(250,149,49)" rx="2" ry="2" />
<text  x="775.36" y="159.5" ></text>
</g>
<g >
<title>memcpy (72 samples, 0.18%)</title><rect x="706.3" y="117" width="2.1" height="15.0" fill="rgb(248,144,48)" rx="2" ry="2" />
<text  x="709.34" y="127.5" ></text>
</g>
<g >
<title>anon-func-165.17 (442 samples, 1.08%)</title><rect x="516.8" y="117" width="12.8" height="15.0" fill="rgb(233,164,31)" rx="2" ry="2" />
<text  x="519.77" y="127.5" ></text>
</g>
<g >
<title>init (22 samples, 0.05%)</title><rect x="395.5" y="133" width="0.6" height="15.0" fill="rgb(236,161,34)" rx="2" ry="2" />
<text  x="398.47" y="143.5" ></text>
</g>
<g >
<title>blob_of_principal (2,176 samples, 5.33%)</title><rect x="303.9" y="149" width="63.0" height="15.0" fill="rgb(228,110,25)" rx="2" ry="2" />
<text  x="306.94" y="159.5" >blob_o..</text>
</g>
<g >
<title>anon-func-31.67 (12 samples, 0.03%)</title><rect x="533.3" y="101" width="0.3" height="15.0" fill="rgb(228,164,25)" rx="2" ry="2" />
<text  x="536.29" y="111.5" ></text>
</g>
<g >
<title>B_add (26 samples, 0.06%)</title><rect x="516.0" y="117" width="0.8" height="15.0" fill="rgb(253,143,53)" rx="2" ry="2" />
<text  x="519.02" y="127.5" ></text>
</g>
<g >
<title>motoko_rts::memory::ic::grow_memory::h8e98dd1e37abaf8a (11 samples, 0.03%)</title><rect x="693.7" y="149" width="0.3" height="15.0" fill="rgb(237,127,35)" rx="2" ry="2" />
<text  x="696.67" y="159.5" ></text>
</g>
<g >
<title>trans_state5 (13 samples, 0.03%)</title><rect x="1189.6" y="165" width="0.4" height="15.0" fill="rgb(241,158,40)" rx="2" ry="2" />
<text  x="1192.62" y="175.5" ></text>
</g>
<g >
<title>motoko_rts::gc::mark_compact::mark_stack::push_mark_stack::ha7ea69fb2814ef13 (500 samples, 1.23%)</title><rect x="1137.1" y="117" width="14.5" height="15.0" fill="rgb(243,127,42)" rx="2" ry="2" />
<text  x="1140.15" y="127.5" ></text>
</g>
<g >
<title>leb128_encode (12 samples, 0.03%)</title><rect x="631.4" y="101" width="0.4" height="15.0" fill="rgb(250,149,49)" rx="2" ry="2" />
<text  x="634.42" y="111.5" ></text>
</g>
<g >
<title>__wasm_apply_data_relocs (840 samples, 2.06%)</title><rect x="370.6" y="149" width="24.3" height="15.0" fill="rgb(244,119,43)" rx="2" ry="2" />
<text  x="373.62" y="159.5" >_..</text>
</g>
<g >
<title>anon-func-116.7 (31 samples, 0.08%)</title><rect x="588.9" y="101" width="0.9" height="15.0" fill="rgb(239,164,38)" rx="2" ry="2" />
<text  x="591.89" y="111.5" ></text>
</g>
<g >
<title>memcpy (48 samples, 0.12%)</title><rect x="334.2" y="133" width="1.4" height="15.0" fill="rgb(248,144,48)" rx="2" ry="2" />
<text  x="337.17" y="143.5" ></text>
</g>
<g >
<title>motoko_rts::memory::ic::grow_memory::h8e98dd1e37abaf8a (11 samples, 0.03%)</title><rect x="694.9" y="149" width="0.3" height="15.0" fill="rgb(237,127,35)" rx="2" ry="2" />
<text  x="697.89" y="159.5" ></text>
</g>
<g >
<title>alloc_words (42 samples, 0.10%)</title><rect x="694.0" y="165" width="1.2" height="15.0" fill="rgb(241,128,39)" rx="2" ry="2" />
<text  x="696.99" y="175.5" ></text>
</g>
<g >
<title>alloc_words (84 samples, 0.21%)</title><rect x="721.2" y="117" width="2.5" height="15.0" fill="rgb(241,128,39)" rx="2" ry="2" />
<text  x="724.24" y="127.5" ></text>
</g>
<g >
<title>obj_idx&lt;1&gt; (17 samples, 0.04%)</title><rect x="717.9" y="149" width="0.5" height="15.0" fill="rgb(246,139,45)" rx="2" ry="2" />
<text  x="720.91" y="159.5" ></text>
</g>
<g >
<title>motoko_rts::gc::mark_compact::mark_stack::push_mark_stack::ha7ea69fb2814ef13 (325 samples, 0.80%)</title><rect x="244.6" y="117" width="9.4" height="15.0" fill="rgb(243,127,42)" rx="2" ry="2" />
<text  x="247.61" y="127.5" ></text>
</g>
<g >
<title>obj_idx&lt;0&gt; (17 samples, 0.04%)</title><rect x="659.4" y="149" width="0.5" height="15.0" fill="rgb(247,139,46)" rx="2" ry="2" />
<text  x="662.36" y="159.5" ></text>
</g>
<g >
<title>memcpy (90 samples, 0.22%)</title><rect x="761.9" y="117" width="2.6" height="15.0" fill="rgb(248,144,48)" rx="2" ry="2" />
<text  x="764.88" y="127.5" ></text>
</g>
<g >
<title>alloc_blob (50 samples, 0.12%)</title><rect x="367.2" y="133" width="1.4" height="15.0" fill="rgb(239,128,38)" rx="2" ry="2" />
<text  x="370.18" y="143.5" ></text>
</g>
<g >
<title>alloc_words (84 samples, 0.21%)</title><rect x="424.1" y="133" width="2.5" height="15.0" fill="rgb(241,128,39)" rx="2" ry="2" />
<text  x="427.14" y="143.5" ></text>
</g>
<g >
<title>text_compare (277 samples, 0.68%)</title><rect x="650.1" y="85" width="8.0" height="15.0" fill="rgb(248,171,47)" rx="2" ry="2" />
<text  x="653.13" y="95.5" ></text>
</g>
<g >
<title>alloc_words (42 samples, 0.10%)</title><rect x="658.1" y="101" width="1.3" height="15.0" fill="rgb(241,128,39)" rx="2" ry="2" />
<text  x="661.15" y="111.5" ></text>
</g>
<g >
<title>motoko_rts::memory::ic::grow_memory::h8e98dd1e37abaf8a (11 samples, 0.03%)</title><rect x="736.1" y="69" width="0.4" height="15.0" fill="rgb(237,127,35)" rx="2" ry="2" />
<text  x="739.14" y="79.5" ></text>
</g>
<g >
<title>motoko_rts::memory::ic::grow_memory::h8e98dd1e37abaf8a (121 samples, 0.30%)</title><rect x="572.4" y="53" width="3.5" height="15.0" fill="rgb(237,127,35)" rx="2" ry="2" />
<text  x="575.43" y="63.5" ></text>
</g>
<g >
<title>obj_idx&lt;0&gt; (51 samples, 0.13%)</title><rect x="578.3" y="117" width="1.4" height="15.0" fill="rgb(247,139,46)" rx="2" ry="2" />
<text  x="581.27" y="127.5" ></text>
</g>
<g >
<title>motoko_rts::memory::ic::grow_memory::h8e98dd1e37abaf8a (11 samples, 0.03%)</title><rect x="765.9" y="101" width="0.4" height="15.0" fill="rgb(237,127,35)" rx="2" ry="2" />
<text  x="768.93" y="111.5" ></text>
</g>
<g >
<title>getRec (719 samples, 1.76%)</title><rect x="638.6" y="133" width="20.8" height="15.0" fill="rgb(230,170,27)" rx="2" ry="2" />
<text  x="641.56" y="143.5" ></text>
</g>
<g >
<title>motoko_rts::memory::ic::grow_memory::h8e98dd1e37abaf8a (33 samples, 0.08%)</title><rect x="551.2" y="69" width="1.0" height="15.0" fill="rgb(237,127,35)" rx="2" ry="2" />
<text  x="554.20" y="79.5" ></text>
</g>
<g >
<title>opt_project (135 samples, 0.33%)</title><rect x="553.9" y="85" width="3.9" height="15.0" fill="rgb(241,186,39)" rx="2" ry="2" />
<text  x="556.89" y="95.5" ></text>
</g>
<g >
<title>opt_inject (60 samples, 0.15%)</title><rect x="552.2" y="85" width="1.7" height="15.0" fill="rgb(241,186,39)" rx="2" ry="2" />
<text  x="555.15" y="95.5" ></text>
</g>
<g >
<title>opt_project (15 samples, 0.04%)</title><rect x="579.7" y="117" width="0.5" height="15.0" fill="rgb(241,186,39)" rx="2" ry="2" />
<text  x="582.75" y="127.5" ></text>
</g>
<g >
<title>sleb128_decode (168 samples, 0.41%)</title><rect x="753.8" y="133" width="4.8" height="15.0" fill="rgb(250,128,49)" rx="2" ry="2" />
<text  x="756.78" y="143.5" ></text>
</g>
<g >
<title>Array.idx (12 samples, 0.03%)</title><rect x="406.4" y="101" width="0.3" height="15.0" fill="rgb(247,150,46)" rx="2" ry="2" />
<text  x="409.38" y="111.5" ></text>
</g>
<g >
<title>all (40,790 samples, 100%)</title><rect x="10.0" y="197" width="1180.0" height="15.0" fill="rgb(255,230,55)" rx="2" ry="2" />
<text  x="13.00" y="207.5" ></text>
</g>
<g >
<title>link_start (41 samples, 0.10%)</title><rect x="394.9" y="165" width="1.2" height="15.0" fill="rgb(239,129,37)" rx="2" ry="2" />
<text  x="397.92" y="175.5" ></text>
</g>
<g >
<title>$lambda (1,522 samples, 3.73%)</title><rect x="697.5" y="165" width="44.1" height="15.0" fill="rgb(240,133,38)" rx="2" ry="2" />
<text  x="700.55" y="175.5" >$lam..</text>
</g>
<g >
<title>motoko_rts::memory::ic::grow_memory::h8e98dd1e37abaf8a (55 samples, 0.13%)</title><rect x="715.8" y="133" width="1.6" height="15.0" fill="rgb(237,127,35)" rx="2" ry="2" />
<text  x="718.83" y="143.5" ></text>
</g>
<g >
<title>motoko_rts::memory::ic::grow_memory::h8e98dd1e37abaf8a (11 samples, 0.03%)</title><rect x="671.0" y="101" width="0.3" height="15.0" fill="rgb(237,127,35)" rx="2" ry="2" />
<text  x="674.02" y="111.5" ></text>
</g>
<g >
<title>motoko_rts::memory::ic::grow_memory::h8e98dd1e37abaf8a (44 samples, 0.11%)</title><rect x="418.1" y="101" width="1.3" height="15.0" fill="rgb(237,127,35)" rx="2" ry="2" />
<text  x="421.13" y="111.5" ></text>
</g>
<g >
<title>motoko_rts::principal_id::principal_of_blob::h5d95e8e2a2d5d9c8 (996 samples, 2.44%)</title><rect x="336.2" y="133" width="28.8" height="15.0" fill="rgb(238,127,36)" rx="2" ry="2" />
<text  x="339.20" y="143.5" >mo..</text>
</g>
<g >
<title>alloc_words (84 samples, 0.21%)</title><rect x="589.8" y="117" width="2.4" height="15.0" fill="rgb(241,128,39)" rx="2" ry="2" />
<text  x="592.79" y="127.5" ></text>
</g>
<g >
<title>B_add (26 samples, 0.06%)</title><rect x="527.2" y="85" width="0.8" height="15.0" fill="rgb(253,143,53)" rx="2" ry="2" />
<text  x="530.22" y="95.5" ></text>
</g>
<g >
<title>leb128_encode (24 samples, 0.06%)</title><rect x="412.9" y="101" width="0.7" height="15.0" fill="rgb(250,149,49)" rx="2" ry="2" />
<text  x="415.92" y="111.5" ></text>
</g>
<g >
<title>@deserialize&lt;&gt; (970 samples, 2.38%)</title><rect x="592.2" y="165" width="28.1" height="15.0" fill="rgb(242,176,41)" rx="2" ry="2" />
<text  x="595.22" y="175.5" >@..</text>
</g>
<g >
<title>trans_state3 (11 samples, 0.03%)</title><rect x="369.6" y="165" width="0.3" height="15.0" fill="rgb(245,158,44)" rx="2" ry="2" />
<text  x="372.55" y="175.5" ></text>
</g>
<g >
<title>to_2_tuple (114 samples, 0.28%)</title><rect x="440.6" y="117" width="3.3" height="15.0" fill="rgb(240,141,39)" rx="2" ry="2" />
<text  x="443.63" y="127.5" ></text>
</g>
<g >
<title>motoko_rts::memory::ic::grow_memory::h8e98dd1e37abaf8a (11 samples, 0.03%)</title><rect x="520.7" y="53" width="0.4" height="15.0" fill="rgb(237,127,35)" rx="2" ry="2" />
<text  x="523.74" y="63.5" ></text>
</g>
<g >
<title>alloc_words (1,344 samples, 3.29%)</title><rect x="471.0" y="117" width="38.9" height="15.0" fill="rgb(241,128,39)" rx="2" ry="2" />
<text  x="474.01" y="127.5" >all..</text>
</g>
<g >
<title>motoko_rts::memory::ic::grow_memory::h8e98dd1e37abaf8a (11 samples, 0.03%)</title><rect x="787.9" y="133" width="0.3" height="15.0" fill="rgb(237,127,35)" rx="2" ry="2" />
<text  x="790.92" y="143.5" ></text>
</g>
<g >
<title>motoko_rts::text::text_compare_range::hfbfe22cfd1c81abd (237 samples, 0.58%)</title><rect x="651.3" y="69" width="6.8" height="15.0" fill="rgb(243,127,42)" rx="2" ry="2" />
<text  x="654.29" y="79.5" ></text>
</g>
<g >
<title>trans_state7 (13 samples, 0.03%)</title><rect x="695.6" y="165" width="0.4" height="15.0" fill="rgb(238,158,36)" rx="2" ry="2" />
<text  x="698.58" y="175.5" ></text>
</g>
<g >
<title>motoko_rts::text::blob_of_text::h5dcf48e134ae840d (20 samples, 0.05%)</title><rect x="365.0" y="133" width="0.6" height="15.0" fill="rgb(247,127,47)" rx="2" ry="2" />
<text  x="368.01" y="143.5" ></text>
</g>
<g >
<title>motoko_rts::types::Blob::shrink::hb14bcc75ff1dba50 (45 samples, 0.11%)</title><rect x="365.6" y="133" width="1.3" height="15.0" fill="rgb(230,127,28)" rx="2" ry="2" />
<text  x="368.59" y="143.5" ></text>
</g>
<g >
<title>list (7,913 samples, 19.40%)</title><rect x="396.1" y="181" width="228.9" height="15.0" fill="rgb(232,113,30)" rx="2" ry="2" />
<text  x="399.11" y="191.5" >list</text>
</g>
<g >
<title>to_4_tuple (63 samples, 0.15%)</title><rect x="734.6" y="101" width="1.9" height="15.0" fill="rgb(240,141,39)" rx="2" ry="2" />
<text  x="737.63" y="111.5" ></text>
</g>
<g >
<title>memcpy (60 samples, 0.15%)</title><rect x="752.0" y="133" width="1.8" height="15.0" fill="rgb(248,144,48)" rx="2" ry="2" />
<text  x="755.05" y="143.5" ></text>
</g>
<g >
<title>to_4_tuple (63 samples, 0.15%)</title><rect x="739.8" y="117" width="1.8" height="15.0" fill="rgb(240,141,39)" rx="2" ry="2" />
<text  x="742.75" y="127.5" ></text>
</g>
<g >
<title>motoko_rts::types::object_size::h8b4c5a9cfd961716 (1,280 samples, 3.14%)</title><rect x="1151.9" y="133" width="37.1" height="15.0" fill="rgb(237,127,35)" rx="2" ry="2" />
<text  x="1154.93" y="143.5" >mot..</text>
</g>
<g >
<title>motoko_rts::memory::ic::grow_memory::h8e98dd1e37abaf8a (44 samples, 0.11%)</title><rect x="729.5" y="85" width="1.2" height="15.0" fill="rgb(237,127,35)" rx="2" ry="2" />
<text  x="732.46" y="95.5" ></text>
</g>
<g >
<title>motoko_rts::text::text_get_range::h423acb006d954612 (28 samples, 0.07%)</title><rect x="649.2" y="53" width="0.8" height="15.0" fill="rgb(245,127,44)" rx="2" ry="2" />
<text  x="652.18" y="63.5" ></text>
</g>
<g >
<title>rts_start (27 samples, 0.07%)</title><rect x="395.3" y="149" width="0.8" height="15.0" fill="rgb(239,145,37)" rx="2" ry="2" />
<text  x="398.33" y="159.5" ></text>
</g>
<g >
<title>to_2_tuple (627 samples, 1.54%)</title><rect x="557.8" y="85" width="18.1" height="15.0" fill="rgb(240,141,39)" rx="2" ry="2" />
<text  x="560.79" y="95.5" ></text>
</g>
<g >
<title>motoko_rts::memory::ic::grow_memory::h8e98dd1e37abaf8a (22 samples, 0.05%)</title><rect x="443.3" y="85" width="0.6" height="15.0" fill="rgb(237,127,35)" rx="2" ry="2" />
<text  x="446.29" y="95.5" ></text>
</g>
<g >
<title>toArray (4,856 samples, 11.90%)</title><rect x="451.7" y="149" width="140.5" height="15.0" fill="rgb(239,160,37)" rx="2" ry="2" />
<text  x="454.74" y="159.5" >toArray</text>
</g>
<g >
<title>memcpy (60 samples, 0.15%)</title><rect x="410.8" y="69" width="1.8" height="15.0" fill="rgb(248,144,48)" rx="2" ry="2" />
<text  x="413.84" y="79.5" ></text>
</g>
<g >
<title>Buffer (1,948 samples, 4.78%)</title><rect x="453.5" y="133" width="56.4" height="15.0" fill="rgb(241,127,40)" rx="2" ry="2" />
<text  x="456.53" y="143.5" >Buffer</text>
</g>
<g >
<title>memcpy (59 samples, 0.14%)</title><rect x="636.4" y="117" width="1.7" height="15.0" fill="rgb(248,144,48)" rx="2" ry="2" />
<text  x="639.39" y="127.5" ></text>
</g>
<g >
<title>@serialize_go&lt;t&gt; (129 samples, 0.32%)</title><rect x="408.8" y="101" width="3.8" height="15.0" fill="rgb(244,156,43)" rx="2" ry="2" />
<text  x="411.84" y="111.5" ></text>
</g>
<g >
<title>utf8_validate (211 samples, 0.52%)</title><rect x="766.3" y="133" width="6.1" height="15.0" fill="rgb(245,124,45)" rx="2" ry="2" />
<text  x="769.25" y="143.5" ></text>
</g>
<g >
<title>leb128_decode (67 samples, 0.16%)</title><rect x="676.7" y="149" width="1.9" height="15.0" fill="rgb(250,149,49)" rx="2" ry="2" />
<text  x="679.69" y="159.5" ></text>
</g>
<g >
<title>alloc_blob (100 samples, 0.25%)</title><rect x="620.6" y="165" width="2.9" height="15.0" fill="rgb(239,128,38)" rx="2" ry="2" />
<text  x="623.63" y="175.5" ></text>
</g>
<g >
<title>parse_idl_header (576 samples, 1.41%)</title><rect x="603.6" y="149" width="16.7" height="15.0" fill="rgb(243,149,41)" rx="2" ry="2" />
<text  x="606.62" y="159.5" ></text>
</g>
<g >
<title>motoko_rts::memory::ic::grow_memory::h8e98dd1e37abaf8a (352 samples, 0.86%)</title><rect x="499.7" y="101" width="10.2" height="15.0" fill="rgb(237,127,35)" rx="2" ry="2" />
<text  x="502.70" y="111.5" ></text>
</g>
<g >
<title>canister_self (60 samples, 0.15%)</title><rect x="366.9" y="149" width="1.7" height="15.0" fill="rgb(238,106,36)" rx="2" ry="2" />
<text  x="369.89" y="159.5" ></text>
</g>
<g >
<title>@buffer_size&lt;B&gt; (33 samples, 0.08%)</title><rect x="629.6" y="117" width="0.9" height="15.0" fill="rgb(251,118,51)" rx="2" ry="2" />
<text  x="632.59" y="127.5" ></text>
</g>
<g >
<title>Text.compare_lt (282 samples, 0.69%)</title><rect x="650.0" y="101" width="8.1" height="15.0" fill="rgb(226,187,24)" rx="2" ry="2" />
<text  x="652.99" y="111.5" ></text>
</g>
<g >
<title>motoko_rts::memory::ic::grow_memory::h8e98dd1e37abaf8a (11 samples, 0.03%)</title><rect x="1151.6" y="133" width="0.3" height="15.0" fill="rgb(237,127,35)" rx="2" ry="2" />
<text  x="1154.61" y="143.5" ></text>
</g>
<g >
<title>motoko_rts::memory::alloc_array::h71e905b8aa24f82f (122 samples, 0.30%)</title><rect x="585.4" y="85" width="3.5" height="15.0" fill="rgb(239,127,37)" rx="2" ry="2" />
<text  x="588.36" y="95.5" ></text>
</g>
<g >
<title>init (3,151 samples, 7.72%)</title><rect x="278.4" y="165" width="91.2" height="15.0" fill="rgb(236,161,34)" rx="2" ry="2" />
<text  x="281.40" y="175.5" >init</text>
</g>
<g >
<title>text_size (4 samples, 0.01%)</title><rect x="410.0" y="85" width="0.1" height="15.0" fill="rgb(245,171,44)" rx="2" ry="2" />
<text  x="412.97" y="95.5" ></text>
</g>
<g >
<title>text_of_ptr_size (161 samples, 0.39%)</title><rect x="761.6" y="133" width="4.7" height="15.0" fill="rgb(245,171,44)" rx="2" ry="2" />
<text  x="764.60" y="143.5" ></text>
</g>
<g >
<title>insertRoot (781 samples, 1.91%)</title><rect x="719.0" y="133" width="22.6" height="15.0" fill="rgb(241,167,39)" rx="2" ry="2" />
<text  x="721.98" y="143.5" >i..</text>
</g>
<g >
<title>motoko_rts::text::alloc_text_blob::h06d8b96611d1e1f0 (61 samples, 0.15%)</title><rect x="669.6" y="117" width="1.7" height="15.0" fill="rgb(237,127,35)" rx="2" ry="2" />
<text  x="672.57" y="127.5" ></text>
</g>
<g >
<title>Array_init (189 samples, 0.46%)</title><rect x="521.7" y="85" width="5.5" height="15.0" fill="rgb(236,150,34)" rx="2" ry="2" />
<text  x="524.75" y="95.5" ></text>
</g>
<g >
<title>get (731 samples, 1.79%)</title><rect x="638.2" y="149" width="21.2" height="15.0" fill="rgb(237,170,35)" rx="2" ry="2" />
<text  x="641.21" y="159.5" ></text>
</g>
<g >
<title>anon-func-43.3 (6 samples, 0.01%)</title><rect x="528.9" y="85" width="0.2" height="15.0" fill="rgb(248,164,48)" rx="2" ry="2" />
<text  x="531.89" y="95.5" ></text>
</g>
<g >
<title>leb128_encode (12 samples, 0.03%)</title><rect x="409.6" y="85" width="0.4" height="15.0" fill="rgb(250,149,49)" rx="2" ry="2" />
<text  x="412.62" y="95.5" ></text>
</g>
<g >
<title>obj_idx&lt;0&gt; (17 samples, 0.04%)</title><rect x="368.6" y="149" width="0.5" height="15.0" fill="rgb(247,139,46)" rx="2" ry="2" />
<text  x="371.63" y="159.5" ></text>
</g>
<g >
<title>RBTree (665 samples, 1.63%)</title><rect x="280.8" y="149" width="19.3" height="15.0" fill="rgb(246,213,46)" rx="2" ry="2" />
<text  x="283.83" y="159.5" ></text>
</g>
<g >
<title>B_eq (10 samples, 0.02%)</title><rect x="528.0" y="85" width="0.3" height="15.0" fill="rgb(239,130,38)" rx="2" ry="2" />
<text  x="530.97" y="95.5" ></text>
</g>
<g >
<title>put (801 samples, 1.96%)</title><rect x="718.4" y="149" width="23.2" height="15.0" fill="rgb(234,152,31)" rx="2" ry="2" />
<text  x="721.41" y="159.5" >put</text>
</g>
<g >
<title>from_2_tuple (6 samples, 0.01%)</title><rect x="723.7" y="117" width="0.1" height="15.0" fill="rgb(240,184,39)" rx="2" ry="2" />
<text  x="726.67" y="127.5" ></text>
</g>
<g >
<title>motoko_rts::memory::ic::grow_memory::h8e98dd1e37abaf8a (11 samples, 0.03%)</title><rect x="807.8" y="149" width="0.3" height="15.0" fill="rgb(237,127,35)" rx="2" ry="2" />
<text  x="810.77" y="159.5" ></text>
</g>
<g >
<title>memcpy (118 samples, 0.29%)</title><rect x="419.4" y="117" width="3.4" height="15.0" fill="rgb(248,144,48)" rx="2" ry="2" />
<text  x="422.40" y="127.5" ></text>
</g>
<g >
<title>store (17,078 samples, 41.87%)</title><rect x="696.0" y="181" width="494.0" height="15.0" fill="rgb(246,150,45)" rx="2" ry="2" />
<text  x="698.96" y="191.5" >store</text>
</g>
<g >
<title>@buffer_size&lt;u&gt; (14 samples, 0.03%)</title><rect x="702.9" y="117" width="0.4" height="15.0" fill="rgb(243,118,42)" rx="2" ry="2" />
<text  x="705.93" y="127.5" ></text>
</g>
<g >
<title>map (236 samples, 0.58%)</title><rect x="443.9" y="149" width="6.9" height="15.0" fill="rgb(240,99,39)" rx="2" ry="2" />
<text  x="446.93" y="159.5" ></text>
</g>
<g >
<title>insertRec (436 samples, 1.07%)</title><rect x="723.8" y="117" width="12.7" height="15.0" fill="rgb(230,167,27)" rx="2" ry="2" />
<text  x="726.84" y="127.5" ></text>
</g>
<g >
<title>@deserialize_go&lt;t&gt; (474 samples, 1.16%)</title><rect x="758.6" y="149" width="13.8" height="15.0" fill="rgb(244,176,43)" rx="2" ry="2" />
<text  x="761.64" y="159.5" ></text>
</g>
<g >
<title>motoko_rts::gc::mark_compact::mark_object::h642f6a1a30be8721 (948 samples, 2.32%)</title><rect x="226.6" y="133" width="27.4" height="15.0" fill="rgb(227,127,25)" rx="2" ry="2" />
<text  x="229.59" y="143.5" >m..</text>
</g>
<g >
<title>motoko_rts::principal_id::enc_stash::h74769144f5980776 (372 samples, 0.91%)</title><rect x="351.6" y="117" width="10.8" height="15.0" fill="rgb(243,127,41)" rx="2" ry="2" />
<text  x="354.65" y="127.5" ></text>
</g>
<g >
<title>sleb128_decode (420 samples, 1.03%)</title><rect x="788.2" y="133" width="12.2" height="15.0" fill="rgb(250,128,49)" rx="2" ry="2" />
<text  x="791.24" y="143.5" ></text>
</g>
<g >
<title>reply_with_data (4 samples, 0.01%)</title><rect x="708.4" y="133" width="0.1" height="15.0" fill="rgb(235,175,33)" rx="2" ry="2" />
<text  x="711.42" y="143.5" ></text>
</g>
<g >
<title>Array.idx (12 samples, 0.03%)</title><rect x="589.4" y="69" width="0.4" height="15.0" fill="rgb(247,150,46)" rx="2" ry="2" />
<text  x="592.44" y="79.5" ></text>
</g>
<g >
<title>motoko_rts::memory::ic::grow_memory::h8e98dd1e37abaf8a (22 samples, 0.05%)</title><rect x="588.3" y="69" width="0.6" height="15.0" fill="rgb(237,127,35)" rx="2" ry="2" />
<text  x="591.25" y="79.5" ></text>
</g>
<g >
<title>compare (625 samples, 1.53%)</title><rect x="641.3" y="117" width="18.1" height="15.0" fill="rgb(248,149,47)" rx="2" ry="2" />
<text  x="644.28" y="127.5" ></text>
</g>
<g >
<title>iterate (2,346 samples, 5.75%)</title><rect x="512.3" y="133" width="67.9" height="15.0" fill="rgb(245,143,45)" rx="2" ry="2" />
<text  x="515.32" y="143.5" >iterate</text>
</g>
<g >
<title>compacting_gc (13,166 samples, 32.28%)</title><rect x="808.1" y="165" width="380.9" height="15.0" fill="rgb(227,149,24)" rx="2" ry="2" />
<text  x="811.08" y="175.5" >compacting_gc</text>
</g>
<g >
<title>motoko_rts::memory::ic::grow_memory::h8e98dd1e37abaf8a (22 samples, 0.05%)</title><rect x="723.0" y="101" width="0.7" height="15.0" fill="rgb(237,127,35)" rx="2" ry="2" />
<text  x="726.03" y="111.5" ></text>
</g>
<g >
<title>alloc_blob (50 samples, 0.12%)</title><rect x="805.4" y="165" width="1.5" height="15.0" fill="rgb(239,128,38)" rx="2" ry="2" />
<text  x="808.42" y="175.5" ></text>
</g>
<g >
<title>Blob.compare_eq (47 samples, 0.12%)</title><rect x="708.5" y="149" width="1.4" height="15.0" fill="rgb(239,126,38)" rx="2" ry="2" />
<text  x="711.54" y="159.5" ></text>
</g>
<g >
<title>text_of_ptr_size (131 samples, 0.32%)</title><rect x="667.5" y="133" width="3.8" height="15.0" fill="rgb(245,171,44)" rx="2" ry="2" />
<text  x="670.55" y="143.5" ></text>
</g>
<g >
<title>alloc_words (168 samples, 0.41%)</title><rect x="725.9" y="101" width="4.8" height="15.0" fill="rgb(241,128,39)" rx="2" ry="2" />
<text  x="728.87" y="111.5" ></text>
</g>
<g >
<title>sleb128_decode (84 samples, 0.21%)</title><rect x="687.5" y="133" width="2.4" height="15.0" fill="rgb(250,128,49)" rx="2" ry="2" />
<text  x="690.51" y="143.5" ></text>
</g>
<g >
<title>motoko_rts::memory::ic::grow_memory::h8e98dd1e37abaf8a (11 samples, 0.03%)</title><rect x="368.3" y="117" width="0.3" height="15.0" fill="rgb(237,127,35)" rx="2" ry="2" />
<text  x="371.31" y="127.5" ></text>
</g>
<g >
<title>memset (104 samples, 0.25%)</title><rect x="1108.7" y="117" width="3.0" height="15.0" fill="rgb(237,144,35)" rx="2" ry="2" />
<text  x="1111.71" y="127.5" ></text>
</g>
<g >
<title>leb128_decode (134 samples, 0.33%)</title><rect x="599.7" y="149" width="3.9" height="15.0" fill="rgb(250,149,49)" rx="2" ry="2" />
<text  x="602.74" y="159.5" ></text>
</g>
<g >
<title>from_2_tuple (6 samples, 0.01%)</title><rect x="533.5" y="85" width="0.1" height="15.0" fill="rgb(240,184,39)" rx="2" ry="2" />
<text  x="536.46" y="95.5" ></text>
</g>
<g >
<title>motoko_rts::memory::ic::grow_memory::h8e98dd1e37abaf8a (11 samples, 0.03%)</title><rect x="749.8" y="117" width="0.3" height="15.0" fill="rgb(237,127,35)" rx="2" ry="2" />
<text  x="752.79" y="127.5" ></text>
</g>
<g >
<title>sleb128_decode (84 samples, 0.21%)</title><rect x="689.9" y="149" width="2.5" height="15.0" fill="rgb(250,128,49)" rx="2" ry="2" />
<text  x="692.94" y="159.5" ></text>
</g>
<g >
<title>alloc_words (126 samples, 0.31%)</title><rect x="548.5" y="85" width="3.7" height="15.0" fill="rgb(241,128,39)" rx="2" ry="2" />
<text  x="551.51" y="95.5" ></text>
</g>
<g >
<title>motoko_rts::memory::ic::grow_memory::h8e98dd1e37abaf8a (22 samples, 0.05%)</title><rect x="622.9" y="149" width="0.6" height="15.0" fill="rgb(237,127,35)" rx="2" ry="2" />
<text  x="625.88" y="159.5" ></text>
</g>
<g >
<title>motoko_rts::memory::ic::grow_memory::h8e98dd1e37abaf8a (11 samples, 0.03%)</title><rect x="301.2" y="133" width="0.3" height="15.0" fill="rgb(237,127,35)" rx="2" ry="2" />
<text  x="304.20" y="143.5" ></text>
</g>
<g >
<title>link_start (884 samples, 2.17%)</title><rect x="370.5" y="181" width="25.6" height="15.0" fill="rgb(239,129,37)" rx="2" ry="2" />
<text  x="373.54" y="191.5" >l..</text>
</g>
<g >
<title>to_2_tuple (114 samples, 0.28%)</title><rect x="736.5" y="117" width="3.3" height="15.0" fill="rgb(240,141,39)" rx="2" ry="2" />
<text  x="739.46" y="127.5" ></text>
</g>
<g >
<title>sleb128_decode (168 samples, 0.41%)</title><rect x="800.4" y="149" width="4.8" height="15.0" fill="rgb(250,128,49)" rx="2" ry="2" />
<text  x="803.39" y="159.5" ></text>
</g>
<g >
<title>motoko_rts::gc::mark_compact::bitmap::alloc_bitmap::hf8e4dc5d7e94e131 (184 samples, 0.45%)</title><rect x="1106.7" y="133" width="5.3" height="15.0" fill="rgb(230,127,28)" rx="2" ry="2" />
<text  x="1109.71" y="143.5" ></text>
</g>
<g >
<title>opt_inject (15 samples, 0.04%)</title><rect x="577.4" y="101" width="0.4" height="15.0" fill="rgb(241,186,39)" rx="2" ry="2" />
<text  x="580.41" y="111.5" ></text>
</g>
<g >
<title>obj_idx&lt;11&gt; (34 samples, 0.08%)</title><rect x="580.2" y="133" width="1.0" height="15.0" fill="rgb(245,139,44)" rx="2" ry="2" />
<text  x="583.18" y="143.5" ></text>
</g>
<g >
<title>alloc_blob (100 samples, 0.25%)</title><rect x="703.4" y="117" width="2.9" height="15.0" fill="rgb(239,128,38)" rx="2" ry="2" />
<text  x="706.45" y="127.5" ></text>
</g>
<g >
<title>memcpy (60 samples, 0.15%)</title><rect x="631.8" y="101" width="1.7" height="15.0" fill="rgb(248,144,48)" rx="2" ry="2" />
<text  x="634.76" y="111.5" ></text>
</g>
<g >
<title>leb128_decode (134 samples, 0.33%)</title><rect x="683.3" y="133" width="3.9" height="15.0" fill="rgb(250,149,49)" rx="2" ry="2" />
<text  x="686.31" y="143.5" ></text>
</g>
<g >
<title>leb128_decode (134 samples, 0.33%)</title><rect x="784.0" y="133" width="3.9" height="15.0" fill="rgb(250,149,49)" rx="2" ry="2" />
<text  x="787.04" y="143.5" ></text>
</g>
<g >
<title>motoko_rts::memory::ic::grow_memory::h8e98dd1e37abaf8a (121 samples, 0.30%)</title><rect x="296.6" y="117" width="3.5" height="15.0" fill="rgb(237,127,35)" rx="2" ry="2" />
<text  x="299.57" y="127.5" ></text>
</g>
<g >
<title>@serialize&lt;&gt; (253 samples, 0.62%)</title><rect x="701.1" y="133" width="7.3" height="15.0" fill="rgb(242,156,41)" rx="2" ry="2" />
<text  x="704.11" y="143.5" ></text>
</g>
<g >
<title>motoko_rts::gc::mark_compact::compacting_gc::h22d366818e6f5234 (13,153 samples, 32.25%)</title><rect x="808.5" y="149" width="380.5" height="15.0" fill="rgb(242,127,41)" rx="2" ry="2" />
<text  x="811.46" y="159.5" >motoko_rts::gc::mark_compact::compacting_gc::h22d36..</text>
</g>
<g >
<title>motoko_rts::text::text_compare_range::hfbfe22cfd1c81abd (237 samples, 0.58%)</title><rect x="643.1" y="69" width="6.9" height="15.0" fill="rgb(243,127,42)" rx="2" ry="2" />
<text  x="646.13" y="79.5" ></text>
</g>
<g >
<title>@mut_array_size (57 samples, 0.14%)</title><rect x="519.4" y="85" width="1.7" height="15.0" fill="rgb(245,118,44)" rx="2" ry="2" />
<text  x="522.40" y="95.5" ></text>
</g>
<g >
<title>@reset_cycles (6 samples, 0.01%)</title><rect x="620.3" y="165" width="0.2" height="15.0" fill="rgb(244,161,43)" rx="2" ry="2" />
<text  x="623.28" y="175.5" ></text>
</g>
<g >
<title>text_size (4 samples, 0.01%)</title><rect x="406.3" y="85" width="0.1" height="15.0" fill="rgb(245,171,44)" rx="2" ry="2" />
<text  x="409.26" y="95.5" ></text>
</g>
<g >
<title>alloc_words (42 samples, 0.10%)</title><rect x="519.8" y="69" width="1.3" height="15.0" fill="rgb(241,128,39)" rx="2" ry="2" />
<text  x="522.84" y="79.5" ></text>
</g>
<g >
<title>motoko_rts::memory::ic::grow_memory::h8e98dd1e37abaf8a (22 samples, 0.05%)</title><rect x="351.0" y="117" width="0.6" height="15.0" fill="rgb(237,127,35)" rx="2" ry="2" />
<text  x="354.01" y="127.5" ></text>
</g>
<g >
<title>motoko_rts::memory::ic::grow_memory::h8e98dd1e37abaf8a (11 samples, 0.03%)</title><rect x="711.0" y="133" width="0.3" height="15.0" fill="rgb(237,127,35)" rx="2" ry="2" />
<text  x="714.03" y="143.5" ></text>
</g>
<g >
<title>motoko_rts::memory::ic::grow_memory::h8e98dd1e37abaf8a (11 samples, 0.03%)</title><rect x="254.0" y="133" width="0.3" height="15.0" fill="rgb(237,127,35)" rx="2" ry="2" />
<text  x="257.01" y="143.5" ></text>
</g>
<g >
<title>add (414 samples, 1.01%)</title><rect x="517.1" y="101" width="12.0" height="15.0" fill="rgb(253,156,53)" rx="2" ry="2" />
<text  x="520.09" y="111.5" ></text>
</g>
<g >
<title>Array.idx_bigint (24 samples, 0.06%)</title><rect x="521.1" y="85" width="0.6" height="15.0" fill="rgb(238,150,36)" rx="2" ry="2" />
<text  x="524.05" y="95.5" ></text>
</g>
<g >
<title>alloc_words (42 samples, 0.10%)</title><rect x="735.2" y="85" width="1.3" height="15.0" fill="rgb(241,128,39)" rx="2" ry="2" />
<text  x="738.24" y="95.5" ></text>
</g>
<g >
<title>motoko_rts::memory::ic::grow_memory::h8e98dd1e37abaf8a (22 samples, 0.05%)</title><rect x="619.6" y="133" width="0.7" height="15.0" fill="rgb(237,127,35)" rx="2" ry="2" />
<text  x="622.64" y="143.5" ></text>
</g>
<g >
<title>motoko_rts::memory::ic::grow_memory::h8e98dd1e37abaf8a (11 samples, 0.03%)</title><rect x="687.2" y="133" width="0.3" height="15.0" fill="rgb(237,127,35)" rx="2" ry="2" />
<text  x="690.19" y="143.5" ></text>
</g>
<g >
<title>memcmp (95 samples, 0.23%)</title><rect x="654.6" y="53" width="2.7" height="15.0" fill="rgb(238,144,36)" rx="2" ry="2" />
<text  x="657.59" y="63.5" ></text>
</g>
<g >
<title>memcmp (95 samples, 0.23%)</title><rect x="646.4" y="53" width="2.8" height="15.0" fill="rgb(238,144,36)" rx="2" ry="2" />
<text  x="649.43" y="63.5" ></text>
</g>
<g >
<title>memcpy (1,380 samples, 3.38%)</title><rect x="1041.4" y="133" width="39.9" height="15.0" fill="rgb(248,144,48)" rx="2" ry="2" />
<text  x="1044.36" y="143.5" >mem..</text>
</g>
<g >
<title>opt_inject (30 samples, 0.07%)</title><rect x="439.8" y="117" width="0.8" height="15.0" fill="rgb(241,186,39)" rx="2" ry="2" />
<text  x="442.76" y="127.5" ></text>
</g>
<g >
<title>opt_inject (15 samples, 0.04%)</title><rect x="730.9" y="101" width="0.4" height="15.0" fill="rgb(241,186,39)" rx="2" ry="2" />
<text  x="733.90" y="111.5" ></text>
</g>
<g >
<title>alloc_blob (50 samples, 0.12%)</title><rect x="709.9" y="149" width="1.4" height="15.0" fill="rgb(239,128,38)" rx="2" ry="2" />
<text  x="712.90" y="159.5" ></text>
</g>
<g >
<title>core::str::converts::from_utf8::h32a64e36f0989ac3 (188 samples, 0.46%)</title><rect x="766.9" y="117" width="5.5" height="15.0" fill="rgb(252,133,52)" rx="2" ry="2" />
<text  x="769.92" y="127.5" ></text>
</g>
<g >
<title>motoko_rts::memory::ic::grow_memory::h8e98dd1e37abaf8a (44 samples, 0.11%)</title><rect x="449.5" y="117" width="1.3" height="15.0" fill="rgb(237,127,35)" rx="2" ry="2" />
<text  x="452.48" y="127.5" ></text>
</g>
<g >
<title>reply_with_data (8 samples, 0.02%)</title><rect x="422.8" y="133" width="0.2" height="15.0" fill="rgb(235,175,33)" rx="2" ry="2" />
<text  x="425.81" y="143.5" ></text>
</g>
<g >
<title>toArray (382 samples, 0.94%)</title><rect x="581.2" y="133" width="11.0" height="15.0" fill="rgb(239,160,37)" rx="2" ry="2" />
<text  x="584.17" y="143.5" ></text>
</g>
<g >
<title>compute_crc32 (33 samples, 0.08%)</title><rect x="350.1" y="117" width="0.9" height="15.0" fill="rgb(245,149,44)" rx="2" ry="2" />
<text  x="353.06" y="127.5" ></text>
</g>
<g >
<title>memcpy (60 samples, 0.15%)</title><rect x="667.8" y="117" width="1.8" height="15.0" fill="rgb(248,144,48)" rx="2" ry="2" />
<text  x="670.84" y="127.5" ></text>
</g>
<g >
<title>trans_state4 (23 samples, 0.06%)</title><rect x="1189.0" y="165" width="0.6" height="15.0" fill="rgb(243,158,42)" rx="2" ry="2" />
<text  x="1191.96" y="175.5" ></text>
</g>
<g >
<title>trans_state7 (26 samples, 0.06%)</title><rect x="624.3" y="165" width="0.7" height="15.0" fill="rgb(238,158,36)" rx="2" ry="2" />
<text  x="627.27" y="175.5" ></text>
</g>
<g >
<title>iter (600 samples, 1.47%)</title><rect x="426.6" y="133" width="17.3" height="15.0" fill="rgb(240,143,38)" rx="2" ry="2" />
<text  x="429.57" y="143.5" ></text>
</g>
<g >
<title>leb128_decode (67 samples, 0.16%)</title><rect x="750.1" y="133" width="1.9" height="15.0" fill="rgb(250,149,49)" rx="2" ry="2" />
<text  x="753.11" y="143.5" ></text>
</g>
<g >
<title>@serialize_go&lt;vt&gt; (238 samples, 0.58%)</title><rect x="406.7" y="117" width="6.9" height="15.0" fill="rgb(237,156,36)" rx="2" ry="2" />
<text  x="409.73" y="127.5" ></text>
</g>
<g >
<title>compacting_gc (9,266 samples, 22.72%)</title><rect x="10.3" y="165" width="268.1" height="15.0" fill="rgb(227,149,24)" rx="2" ry="2" />
<text  x="13.35" y="175.5" >compacting_gc</text>
</g>
<g >
<title>motoko_rts::memory::ic::grow_memory::h8e98dd1e37abaf8a (22 samples, 0.05%)</title><rect x="511.7" y="117" width="0.6" height="15.0" fill="rgb(237,127,35)" rx="2" ry="2" />
<text  x="514.68" y="127.5" ></text>
</g>
<g >
<title>$lambda (262 samples, 0.64%)</title><rect x="701.0" y="149" width="7.5" height="15.0" fill="rgb(240,133,38)" rx="2" ry="2" />
<text  x="703.96" y="159.5" ></text>
</g>
<g >
<title>motoko_rts::memory::ic::grow_memory::h8e98dd1e37abaf8a (22 samples, 0.05%)</title><rect x="635.8" y="101" width="0.6" height="15.0" fill="rgb(237,127,35)" rx="2" ry="2" />
<text  x="638.76" y="111.5" ></text>
</g>
<g >
<title>@buffer_size&lt;vt&gt; (145 samples, 0.36%)</title><rect x="402.5" y="117" width="4.2" height="15.0" fill="rgb(237,118,36)" rx="2" ry="2" />
<text  x="405.53" y="127.5" ></text>
</g>
<g >
<title>trans_state6 (13 samples, 0.03%)</title><rect x="695.2" y="165" width="0.4" height="15.0" fill="rgb(240,158,38)" rx="2" ry="2" />
<text  x="698.20" y="175.5" ></text>
</g>
<g >
<title>@reset_refund (6 samples, 0.01%)</title><rect x="620.5" y="165" width="0.1" height="15.0" fill="rgb(248,161,48)" rx="2" ry="2" />
<text  x="623.45" y="175.5" ></text>
</g>
<g >
<title>__wasm_call_ctors (841 samples, 2.06%)</title><rect x="370.6" y="165" width="24.3" height="15.0" fill="rgb(239,119,38)" rx="2" ry="2" />
<text  x="373.60" y="175.5" >_..</text>
</g>
<g >
<title>__wasm_apply_global_relocs (12 samples, 0.03%)</title><rect x="395.0" y="149" width="0.3" height="15.0" fill="rgb(244,119,43)" rx="2" ry="2" />
<text  x="397.98" y="159.5" ></text>
</g>
<g >
<title>leb128_decode (67 samples, 0.16%)</title><rect x="759.7" y="133" width="1.9" height="15.0" fill="rgb(250,149,49)" rx="2" ry="2" />
<text  x="762.66" y="143.5" ></text>
</g>
<g >
<title>$lambda (845 samples, 2.07%)</title><rect x="398.6" y="149" width="24.4" height="15.0" fill="rgb(240,133,38)" rx="2" ry="2" />
<text  x="401.60" y="159.5" >$..</text>
</g>
<g >
<title>Array.idx_bigint (24 samples, 0.06%)</title><rect x="589.1" y="85" width="0.7" height="15.0" fill="rgb(238,150,36)" rx="2" ry="2" />
<text  x="592.09" y="95.5" ></text>
</g>
<g >
<title>alloc_blob (100 samples, 0.25%)</title><rect x="633.5" y="117" width="2.9" height="15.0" fill="rgb(239,128,38)" rx="2" ry="2" />
<text  x="636.50" y="127.5" ></text>
</g>
<g >
<title>can_tag_i64 (8 samples, 0.02%)</title><rect x="527.7" y="69" width="0.3" height="15.0" fill="rgb(234,106,32)" rx="2" ry="2" />
<text  x="530.74" y="79.5" ></text>
</g>
<g >
<title>motoko_rts::memory::ic::grow_memory::h8e98dd1e37abaf8a (22 samples, 0.05%)</title><rect x="734.0" y="69" width="0.6" height="15.0" fill="rgb(237,127,35)" rx="2" ry="2" />
<text  x="737.00" y="79.5" ></text>
</g>
<g >
<title>motoko_rts::types::object_size::h8b4c5a9cfd961716 (832 samples, 2.04%)</title><rect x="254.3" y="133" width="24.1" height="15.0" fill="rgb(237,127,35)" rx="2" ry="2" />
<text  x="257.33" y="143.5" >m..</text>
</g>
<g >
<title>alloc_blob (50 samples, 0.12%)</title><rect x="300.1" y="149" width="1.4" height="15.0" fill="rgb(239,128,38)" rx="2" ry="2" />
<text  x="303.07" y="159.5" ></text>
</g>
<g >
<title>to_2_tuple (114 samples, 0.28%)</title><rect x="731.3" y="101" width="3.3" height="15.0" fill="rgb(240,141,39)" rx="2" ry="2" />
<text  x="734.34" y="111.5" ></text>
</g>
<g >
<title>trans_state6 (26 samples, 0.06%)</title><rect x="623.5" y="165" width="0.8" height="15.0" fill="rgb(240,158,38)" rx="2" ry="2" />
<text  x="626.52" y="175.5" ></text>
</g>
<g >
<title>memcmp (179 samples, 0.44%)</title><rect x="329.0" y="133" width="5.2" height="15.0" fill="rgb(238,144,36)" rx="2" ry="2" />
<text  x="332.00" y="143.5" ></text>
</g>
<g >
<title>entries (722 samples, 1.77%)</title><rect x="423.0" y="149" width="20.9" height="15.0" fill="rgb(237,196,36)" rx="2" ry="2" />
<text  x="426.04" y="159.5" ></text>
</g>
<g >
<title>@serialize&lt;B&gt; (357 samples, 0.88%)</title><rect x="627.8" y="133" width="10.3" height="15.0" fill="rgb(251,156,51)" rx="2" ry="2" />
<text  x="630.77" y="143.5" ></text>
</g>
<g >
<title>alloc_words (210 samples, 0.51%)</title><rect x="711.3" y="149" width="6.1" height="15.0" fill="rgb(241,128,39)" rx="2" ry="2" />
<text  x="714.35" y="159.5" ></text>
</g>
<g >
<title>alloc_blob (200 samples, 0.49%)</title><rect x="413.6" y="117" width="5.8" height="15.0" fill="rgb(239,128,38)" rx="2" ry="2" />
<text  x="416.61" y="127.5" ></text>
</g>
<g >
<title>motoko_rts::memory::ic::grow_memory::h8e98dd1e37abaf8a (11 samples, 0.03%)</title><rect x="806.6" y="149" width="0.3" height="15.0" fill="rgb(237,127,35)" rx="2" ry="2" />
<text  x="809.55" y="159.5" ></text>
</g>
<g >
<title>@serialize_go&lt;B&gt; (102 samples, 0.25%)</title><rect x="630.5" y="117" width="3.0" height="15.0" fill="rgb(251,156,51)" rx="2" ry="2" />
<text  x="633.55" y="127.5" ></text>
</g>
<g >
<title>motoko_rts::memory::ic::grow_memory::h8e98dd1e37abaf8a (11 samples, 0.03%)</title><rect x="741.3" y="85" width="0.3" height="15.0" fill="rgb(237,127,35)" rx="2" ry="2" />
<text  x="744.26" y="95.5" ></text>
</g>
<g >
<title>text_compare (277 samples, 0.68%)</title><rect x="642.0" y="85" width="8.0" height="15.0" fill="rgb(248,171,47)" rx="2" ry="2" />
<text  x="644.98" y="95.5" ></text>
</g>
<g >
<title>motoko_rts::memory::ic::grow_memory::h8e98dd1e37abaf8a (11 samples, 0.03%)</title><rect x="659.0" y="85" width="0.4" height="15.0" fill="rgb(237,127,35)" rx="2" ry="2" />
<text  x="662.04" y="95.5" ></text>
</g>
<g >
<title>motoko_rts::memory::ic::grow_memory::h8e98dd1e37abaf8a (88 samples, 0.22%)</title><rect x="437.2" y="101" width="2.6" height="15.0" fill="rgb(237,127,35)" rx="2" ry="2" />
<text  x="440.22" y="111.5" ></text>
</g>
<g >
<title>alloc_words (84 samples, 0.21%)</title><rect x="441.5" y="101" width="2.4" height="15.0" fill="rgb(241,128,39)" rx="2" ry="2" />
<text  x="444.50" y="111.5" ></text>
</g>
<g >
<title>trans_state4 (23 samples, 0.06%)</title><rect x="369.9" y="165" width="0.6" height="15.0" fill="rgb(243,158,42)" rx="2" ry="2" />
<text  x="372.87" y="175.5" ></text>
</g>
<g >
<title>@deserialize_go&lt;B&gt; (420 samples, 1.03%)</title><rect x="746.5" y="149" width="12.1" height="15.0" fill="rgb(251,176,51)" rx="2" ry="2" />
<text  x="749.49" y="159.5" ></text>
</g>
<g >
<title>Array.idx (12 samples, 0.03%)</title><rect x="412.6" y="101" width="0.3" height="15.0" fill="rgb(247,150,46)" rx="2" ry="2" />
<text  x="415.57" y="111.5" ></text>
</g>
<g >
<title>obj_idx&lt;0&gt; (51 samples, 0.13%)</title><rect x="575.9" y="101" width="1.5" height="15.0" fill="rgb(247,139,46)" rx="2" ry="2" />
<text  x="578.93" y="111.5" ></text>
</g>
<g >
<title>@serialize_go&lt;u&gt; (4 samples, 0.01%)</title><rect x="703.3" y="117" width="0.1" height="15.0" fill="rgb(243,156,42)" rx="2" ry="2" />
<text  x="706.33" y="127.5" ></text>
</g>
<g >
<title>alloc_blob (50 samples, 0.12%)</title><rect x="748.7" y="133" width="1.4" height="15.0" fill="rgb(239,128,38)" rx="2" ry="2" />
<text  x="751.66" y="143.5" ></text>
</g>
<g >
<title>motoko_rts::text::alloc_text_blob::h06d8b96611d1e1f0 (61 samples, 0.15%)</title><rect x="764.5" y="117" width="1.8" height="15.0" fill="rgb(237,127,35)" rx="2" ry="2" />
<text  x="767.49" y="127.5" ></text>
</g>
<g >
<title>$lambda (366 samples, 0.90%)</title><rect x="627.6" y="149" width="10.6" height="15.0" fill="rgb(240,133,38)" rx="2" ry="2" />
<text  x="630.63" y="159.5" ></text>
</g>
<g >
<title>opt_project (15 samples, 0.04%)</title><rect x="659.9" y="149" width="0.4" height="15.0" fill="rgb(241,186,39)" rx="2" ry="2" />
<text  x="662.85" y="159.5" ></text>
</g>
<g >
<title>$lambda (1,179 samples, 2.89%)</title><rect x="626.2" y="165" width="34.1" height="15.0" fill="rgb(240,133,38)" rx="2" ry="2" />
<text  x="629.18" y="175.5" >$l..</text>
</g>
<g >
<title>utf8_validate (185 samples, 0.45%)</title><rect x="671.3" y="133" width="5.4" height="15.0" fill="rgb(245,124,45)" rx="2" ry="2" />
<text  x="674.34" y="143.5" ></text>
</g>
<g >
<title>alloc_array (126 samples, 0.31%)</title><rect x="585.2" y="101" width="3.7" height="15.0" fill="rgb(239,128,37)" rx="2" ry="2" />
<text  x="588.25" y="111.5" ></text>
</g>
<g >
<title>motoko_rts::memory::ic::grow_memory::h8e98dd1e37abaf8a (22 samples, 0.05%)</title><rect x="335.6" y="133" width="0.6" height="15.0" fill="rgb(237,127,35)" rx="2" ry="2" />
<text  x="338.56" y="143.5" ></text>
</g>
<g >
<title>alloc_words (84 samples, 0.21%)</title><rect x="737.3" y="101" width="2.5" height="15.0" fill="rgb(241,128,39)" rx="2" ry="2" />
<text  x="740.32" y="111.5" ></text>
</g>
<g >
<title>alloc_words (84 samples, 0.21%)</title><rect x="509.9" y="133" width="2.4" height="15.0" fill="rgb(241,128,39)" rx="2" ry="2" />
<text  x="512.89" y="143.5" ></text>
</g>
<g >
<title>from_2_tuple (6 samples, 0.01%)</title><rect x="730.7" y="101" width="0.2" height="15.0" fill="rgb(240,184,39)" rx="2" ry="2" />
<text  x="733.73" y="111.5" ></text>
</g>
<g >
<title>motoko_rts::gc::mark_compact::compacting_gc::h22d366818e6f5234 (9,253 samples, 22.68%)</title><rect x="10.7" y="149" width="267.7" height="15.0" fill="rgb(242,127,41)" rx="2" ry="2" />
<text  x="13.72" y="159.5" >motoko_rts::gc::mark_compact::compa..</text>
</g>
<g >
<title>Array_tabulate (248 samples, 0.61%)</title><rect x="582.6" y="117" width="7.2" height="15.0" fill="rgb(245,150,45)" rx="2" ry="2" />
<text  x="585.61" y="127.5" ></text>
</g>
<g >
<title>obj_idx&lt;0&gt; (17 samples, 0.04%)</title><rect x="717.4" y="149" width="0.5" height="15.0" fill="rgb(247,139,46)" rx="2" ry="2" />
<text  x="720.42" y="159.5" ></text>
</g>
<g >
<title>leb128_decode (268 samples, 0.66%)</title><rect x="611.9" y="133" width="7.7" height="15.0" fill="rgb(250,149,49)" rx="2" ry="2" />
<text  x="614.89" y="143.5" ></text>
</g>
<g >
<title>alloc_words (42 samples, 0.10%)</title><rect x="740.4" y="101" width="1.2" height="15.0" fill="rgb(241,128,39)" rx="2" ry="2" />
<text  x="743.36" y="111.5" ></text>
</g>
<g >
<title>motoko_rts::gc::mark_compact::mark_object::h642f6a1a30be8721 (1,368 samples, 3.35%)</title><rect x="1112.0" y="133" width="39.6" height="15.0" fill="rgb(227,127,25)" rx="2" ry="2" />
<text  x="1115.04" y="143.5" >mot..</text>
</g>
<g >
<title>$lambda (6,735 samples, 16.51%)</title><rect x="397.4" y="165" width="194.8" height="15.0" fill="rgb(240,133,38)" rx="2" ry="2" />
<text  x="400.38" y="175.5" >$lambda</text>
</g>
<g >
<title>motoko_rts::memory::ic::grow_memory::h8e98dd1e37abaf8a (22 samples, 0.05%)</title><rect x="705.7" y="101" width="0.6" height="15.0" fill="rgb(237,127,35)" rx="2" ry="2" />
<text  x="708.71" y="111.5" ></text>
</g>
<g >
<title>alloc_blob (50 samples, 0.12%)</title><rect x="692.5" y="165" width="1.5" height="15.0" fill="rgb(239,128,38)" rx="2" ry="2" />
<text  x="695.54" y="175.5" ></text>
</g>
<g >
<title>core::str::converts::from_utf8::h32a64e36f0989ac3 (162 samples, 0.40%)</title><rect x="672.0" y="117" width="4.7" height="15.0" fill="rgb(252,133,52)" rx="2" ry="2" />
<text  x="675.00" y="127.5" ></text>
</g>
<g >
<title>motoko_rts::text::text_get_range::h423acb006d954612 (28 samples, 0.07%)</title><rect x="657.3" y="53" width="0.8" height="15.0" fill="rgb(245,127,44)" rx="2" ry="2" />
<text  x="660.34" y="63.5" ></text>
</g>
<g >
<title>motoko_rts::memory::alloc_array::h71e905b8aa24f82f (61 samples, 0.15%)</title><rect x="525.5" y="53" width="1.7" height="15.0" fill="rgb(239,127,37)" rx="2" ry="2" />
<text  x="528.45" y="63.5" ></text>
</g>
<g >
<title>@deserialize_go&lt;t&gt; (418 samples, 1.02%)</title><rect x="664.6" y="149" width="12.1" height="15.0" fill="rgb(244,176,43)" rx="2" ry="2" />
<text  x="667.60" y="159.5" ></text>
</g>
<g >
<title>leb128_decode (67 samples, 0.16%)</title><rect x="665.6" y="133" width="1.9" height="15.0" fill="rgb(250,149,49)" rx="2" ry="2" />
<text  x="668.61" y="143.5" ></text>
</g>
<g >
<title>alloc_words (462 samples, 1.13%)</title><rect x="562.6" y="69" width="13.3" height="15.0" fill="rgb(241,128,39)" rx="2" ry="2" />
<text  x="565.57" y="79.5" ></text>
</g>
</g>
</svg>
