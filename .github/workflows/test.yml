name: "build"
on:
  push:
     branches: [ master ]
  pull_request: {}
jobs:
  tests:
    strategy:
      matrix:
        os: [ ubuntu-latest ]
      fail-fast: false
    runs-on: ${{ matrix.os }}
    steps:
    - uses: actions/checkout@v3
      with:
        # fetch full history so that git merge-base works
        fetch-depth: 0
        # fetch PR commit, not predicted merge commit
        ref: ${{ github.event.pull_request.head.sha }}
    - uses: cachix/install-nix-action@v18
      with:
        extra_nix_config: |
          experimental-features = nix-command

    - run: nix-env -iA nix-build-uncached -f nix/

    - name: "nix-build"
      id: nix-build
      run: nix-build-uncached --max-jobs 4 -A all-systems-go -build-flags -L

    - name: Upload core dumps
          if: failure() && steps.nix-build.outcome != 'success'
          uses: actions/upload-artifact@master
          with:
            name: core-dump
            path: /var/lib/apport/coredump

        - name: Upload core dumps 2
          if: failure() && steps.nix-build.outcome != 'success'
          uses: actions/upload-artifact@master
          with:
            name: core-dump
            path: /var/crash

        - name: Upload core dumps 3
          if: failure() && steps.nix-build.outcome != 'success'
          uses: actions/upload-artifact@master
          with:
            name: core-dump
            path: /var/lib/systemd/coredump