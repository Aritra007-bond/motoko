Interpreter:
-- Checking objects.as:
type O = {self : () -> O}
type Q = {this : var Q?}
let ignore : (async ()) -> ()
let o : {self : () -> O}
let oo : O
let p : {get_y : () -> Int; x : Nat}
let q : Q
let tictac : {tac : Int -> (); tic : Int -> ()}
let tictac_actor : actor {tac_msg : Int -> (); tic_msg : Int -> ()}
let tictac_actor_async : actor {tac_msg_async : Int -> async (); tic_msg_async : Int -> async ()}
let tictac_async : {tac_async : Int -> async (); tic_async : Int -> async ()}
let x : Nat
let y : Int
-- Interpreting objects.as:
get_y()
  <= 2
self()
  <= {self = func}
tic(10)
  tac(9)
    tic(8)
      tac(7)
        tic(6)
          tac(5)
            tic(4)
              tac(3)
                tic(2)
                  tac(1)
                    tic(0)
                      <= ()
                    <= ()
                  <= ()
                <= ()
              <= ()
            <= ()
          <= ()
        <= ()
      <= ()
    <= ()
  <= ()
-> message tic_msg(10)
tic_async(10)
  -> async objects.as:28.33-28.77
  <= async _ #0
-> message tic_msg_async(10)
-> async objects.as:39.9-39.18
objects.as:40.9-40.12: execution error, arithmetic overflow
<- message tic_msg(10)
  tic_msg(10)
    -> message tac_msg(9)
    <= ()
<- async objects.as:28.33-28.77
  tac_async(9)
    -> async objects.as:29.33-29.77
    <= async _ #0
  ignore(async _ #0)
    <= ()
  <= ()
<- message tic_msg_async(10)
  tic_msg_async(10)
    -> async objects.as:34.37-34.85
    <= async _ #0
<- async objects.as:39.9-39.18
objects.as:39.15-39.18: execution error, arithmetic overflow
<- message tac_msg(9)
  tac_msg(9)
    -> message tic_msg(8)
    <= ()
<- async objects.as:29.33-29.77
  tic_async(8)
    -> async objects.as:28.33-28.77
    <= async _ #0
  ignore(async _ #0)
    <= ()
  <= ()
<- async objects.as:34.37-34.85
  -> message tac_msg_async(9)
  ignore(async _ #0)
    <= ()
  <= ()
<- message tic_msg(8)
  tic_msg(8)
    -> message tac_msg(7)
    <= ()
<- async objects.as:28.33-28.77
  tac_async(7)
    -> async objects.as:29.33-29.77
    <= async _ #0
  ignore(async _ #0)
    <= ()
  <= ()
<- message tac_msg_async(9)
  tac_msg_async(9)
    -> async objects.as:35.37-35.85
    <= async _ #0
<- message tac_msg(7)
  tac_msg(7)
    -> message tic_msg(6)
    <= ()
<- async objects.as:29.33-29.77
  tic_async(6)
    -> async objects.as:28.33-28.77
    <= async _ #0
  ignore(async _ #0)
    <= ()
  <= ()
<- async objects.as:35.37-35.85
  -> message tic_msg_async(8)
  ignore(async _ #0)
    <= ()
  <= ()
<- message tic_msg(6)
  tic_msg(6)
    -> message tac_msg(5)
    <= ()
<- async objects.as:28.33-28.77
  tac_async(5)
    -> async objects.as:29.33-29.77
    <= async _ #0
  ignore(async _ #0)
    <= ()
  <= ()
<- message tic_msg_async(8)
  tic_msg_async(8)
    -> async objects.as:34.37-34.85
    <= async _ #0
<- message tac_msg(5)
  tac_msg(5)
    -> message tic_msg(4)
    <= ()
<- async objects.as:29.33-29.77
  tic_async(4)
    -> async objects.as:28.33-28.77
    <= async _ #0
  ignore(async _ #0)
    <= ()
  <= ()
<- async objects.as:34.37-34.85
  -> message tac_msg_async(7)
  ignore(async _ #0)
    <= ()
  <= ()
<- message tic_msg(4)
  tic_msg(4)
    -> message tac_msg(3)
    <= ()
<- async objects.as:28.33-28.77
  tac_async(3)
    -> async objects.as:29.33-29.77
    <= async _ #0
  ignore(async _ #0)
    <= ()
  <= ()
<- message tac_msg_async(7)
  tac_msg_async(7)
    -> async objects.as:35.37-35.85
    <= async _ #0
<- message tac_msg(3)
  tac_msg(3)
    -> message tic_msg(2)
    <= ()
<- async objects.as:29.33-29.77
  tic_async(2)
    -> async objects.as:28.33-28.77
    <= async _ #0
  ignore(async _ #0)
    <= ()
  <= ()
<- async objects.as:35.37-35.85
  -> message tic_msg_async(6)
  ignore(async _ #0)
    <= ()
  <= ()
<- message tic_msg(2)
  tic_msg(2)
    -> message tac_msg(1)
    <= ()
<- async objects.as:28.33-28.77
  tac_async(1)
    -> async objects.as:29.33-29.77
    <= async _ #0
  ignore(async _ #0)
    <= ()
  <= ()
<- message tic_msg_async(6)
  tic_msg_async(6)
    -> async objects.as:34.37-34.85
    <= async _ #0
<- message tac_msg(1)
  tac_msg(1)
    -> message tic_msg(0)
    <= ()
<- async objects.as:29.33-29.77
  tic_async(0)
    -> async objects.as:28.33-28.77
    <= async _ #0
  ignore(async _ #0)
    <= ()
  <= ()
<- async objects.as:34.37-34.85
  -> message tac_msg_async(5)
  ignore(async _ #0)
    <= ()
  <= ()
<- message tic_msg(0)
  tic_msg(0)
    <= ()
<- async objects.as:28.33-28.77
  <= ()
<- message tac_msg_async(5)
  tac_msg_async(5)
    -> async objects.as:35.37-35.85
    <= async _ #0
<- async objects.as:35.37-35.85
  -> message tic_msg_async(4)
  ignore(async _ #0)
    <= ()
  <= ()
<- message tic_msg_async(4)
  tic_msg_async(4)
    -> async objects.as:34.37-34.85
    <= async _ #0
<- async objects.as:34.37-34.85
  -> message tac_msg_async(3)
  ignore(async _ #0)
    <= ()
  <= ()
<- message tac_msg_async(3)
  tac_msg_async(3)
    -> async objects.as:35.37-35.85
    <= async _ #0
<- async objects.as:35.37-35.85
  -> message tic_msg_async(2)
  ignore(async _ #0)
    <= ()
  <= ()
<- message tic_msg_async(2)
  tic_msg_async(2)
    -> async objects.as:34.37-34.85
    <= async _ #0
<- async objects.as:34.37-34.85
  -> message tac_msg_async(1)
  ignore(async _ #0)
    <= ()
  <= ()
<- message tac_msg_async(1)
  tac_msg_async(1)
    -> async objects.as:35.37-35.85
    <= async _ #0
<- async objects.as:35.37-35.85
  -> message tic_msg_async(0)
  ignore(async _ #0)
    <= ()
  <= ()
<- message tic_msg_async(0)
  tic_msg_async(0)
    -> async objects.as:34.37-34.85
    <= async _ #0
<- async objects.as:34.37-34.85
  <= ()
-- Finished objects.as:
let ignore : (async ()) -> () = func
let o : {self : () -> O} = {self = func}
let oo : O = {self = func}
let p : {get_y : () -> Int; x : Nat} = {get_y = func; x = 3}
let q : Q = {this = {this = {...}}}
let tictac : {tac : Int -> (); tic : Int -> ()} = {tac = func; tic = func}
let tictac_actor : actor {tac_msg : Int -> (); tic_msg : Int -> ()} = actor {tac_msg = func; tic_msg = func}
let tictac_actor_async : actor {tac_msg_async : Int -> async (); tic_msg_async : Int -> async ()} = actor {tac_msg_async = func; tic_msg_async = func}
let tictac_async : {tac_async : Int -> async (); tic_async : Int -> async ()} = {tac_async = func; tic_async = func}
let x : Nat = 3
let y : Int = 2

Compiler:
(module (func $main unreachable) (start $main))
Interpreting the .wat:
objects.wat:1.21-1.32: runtime trap: unreachable executed
