Interpreter:
-- Checking fib.as:
let a : var Nat[]
var i : Nat
-- Interpreting fib.as:
-- Finished fib.as:
let a : var Nat[] = [0, 1, 1, 2, 3, 5, 8, 13, 21, 34, 55]

fib.as:20.18-20.20: fatal error, Invalid_argument("as_nat")

Raised at file "value.ml", line 132, characters 22-42
Called from file "value.ml", line 183, characters 34-44
Called from file "main.ml", line 37, characters 18-45
Called from file "map.ml", line 270, characters 20-25
Called from file "main.ml", line 75, characters 6-42

Last context:
a = [0, 1, 1, 2, 3, 5, 8, 13, 21, 34, 55]
i = 10

Compiler:
(module
  (type $0 (func))
  (memory $0 100)
  (global $0 (mut i32) (i32.const 0))
  (func $0
    (type 0)
    (local i32 i32 i32)
    (i32.const 44)
    (set_local 0)
    (get_global 0)
    (get_global 0)
    (get_local 0)
    (i32.add)
    (set_global 0)
    (tee_local 0)
    (get_local 0)
    (i32.const 0)
    (i32.add)
    (i32.const 0)
    (i32.store align=1)
    (tee_local 0)
    (get_local 0)
    (i32.const 4)
    (i32.add)
    (i32.const 1)
    (i32.store align=1)
    (tee_local 0)
    (get_local 0)
    (i32.const 8)
    (i32.add)
    (i32.const 0)
    (i32.store align=1)
    (tee_local 0)
    (get_local 0)
    (i32.const 12)
    (i32.add)
    (i32.const 0)
    (i32.store align=1)
    (tee_local 0)
    (get_local 0)
    (i32.const 16)
    (i32.add)
    (i32.const 0)
    (i32.store align=1)
    (tee_local 0)
    (get_local 0)
    (i32.const 20)
    (i32.add)
    (i32.const 0)
    (i32.store align=1)
    (tee_local 0)
    (get_local 0)
    (i32.const 24)
    (i32.add)
    (i32.const 0)
    (i32.store align=1)
    (tee_local 0)
    (get_local 0)
    (i32.const 28)
    (i32.add)
    (i32.const 0)
    (i32.store align=1)
    (tee_local 0)
    (get_local 0)
    (i32.const 32)
    (i32.add)
    (i32.const 0)
    (i32.store align=1)
    (tee_local 0)
    (get_local 0)
    (i32.const 36)
    (i32.add)
    (i32.const 0)
    (i32.store align=1)
    (tee_local 0)
    (get_local 0)
    (i32.const 40)
    (i32.add)
    (i32.const 0)
    (i32.store align=1)
    (set_local 1)
    (i32.const 1)
    (set_local 2)
    (loop
      (get_local 2)
      (i32.const 10)
      (i32.lt_s)
      (if
        (then
          (get_local 2)
          (i32.const 1)
          (i32.add)
          (set_local 2)
          (i32.const 0)
          (drop)
          (get_local 1)
          (get_local 2)
          (i32.const 4)
          (i32.mul)
          (i32.add)
          (get_local 1)
          (get_local 2)
          (i32.const 1)
          (i32.sub)
          (i32.const 4)
          (i32.mul)
          (i32.add)
          (i32.load align=1)
          (get_local 1)
          (get_local 2)
          (i32.const 2)
          (i32.sub)
          (i32.const 4)
          (i32.mul)
          (i32.add)
          (i32.load align=1)
          (i32.add)
          (i32.store align=1)
          (i32.const 0)
          (drop)
          (br 1)
        )
        (else)
      )
    )
    (i32.const 0)
    (drop)
    (get_local 2)
    (i32.const 10)
    (i32.eq)
    (if (result i32) (then (i32.const 0)) (else (unreachable)))
    (drop)
    (get_local 1)
    (i32.const 0)
    (i32.const 4)
    (i32.mul)
    (i32.add)
    (i32.load align=1)
    (i32.const 0)
    (i32.eq)
    (if (result i32) (then (i32.const 0)) (else (unreachable)))
    (drop)
    (get_local 1)
    (i32.const 1)
    (i32.const 4)
    (i32.mul)
    (i32.add)
    (i32.load align=1)
    (i32.const 1)
    (i32.eq)
    (if (result i32) (then (i32.const 0)) (else (unreachable)))
    (drop)
    (get_local 1)
    (i32.const 2)
    (i32.const 4)
    (i32.mul)
    (i32.add)
    (i32.load align=1)
    (i32.const 1)
    (i32.eq)
    (if (result i32) (then (i32.const 0)) (else (unreachable)))
    (drop)
    (get_local 1)
    (i32.const 3)
    (i32.const 4)
    (i32.mul)
    (i32.add)
    (i32.load align=1)
    (i32.const 2)
    (i32.eq)
    (if (result i32) (then (i32.const 0)) (else (unreachable)))
    (drop)
    (get_local 1)
    (i32.const 4)
    (i32.const 4)
    (i32.mul)
    (i32.add)
    (i32.load align=1)
    (i32.const 3)
    (i32.eq)
    (if (result i32) (then (i32.const 0)) (else (unreachable)))
    (drop)
    (get_local 1)
    (i32.const 5)
    (i32.const 4)
    (i32.mul)
    (i32.add)
    (i32.load align=1)
    (i32.const 5)
    (i32.eq)
    (if (result i32) (then (i32.const 0)) (else (unreachable)))
    (drop)
    (get_local 1)
    (i32.const 6)
    (i32.const 4)
    (i32.mul)
    (i32.add)
    (i32.load align=1)
    (i32.const 8)
    (i32.eq)
    (if (result i32) (then (i32.const 0)) (else (unreachable)))
    (drop)
    (get_local 1)
    (i32.const 7)
    (i32.const 4)
    (i32.mul)
    (i32.add)
    (i32.load align=1)
    (i32.const 13)
    (i32.eq)
    (if (result i32) (then (i32.const 0)) (else (unreachable)))
    (drop)
    (get_local 1)
    (i32.const 8)
    (i32.const 4)
    (i32.mul)
    (i32.add)
    (i32.load align=1)
    (i32.const 21)
    (i32.eq)
    (if (result i32) (then (i32.const 0)) (else (unreachable)))
    (drop)
    (get_local 1)
    (i32.const 9)
    (i32.const 4)
    (i32.mul)
    (i32.add)
    (i32.load align=1)
    (i32.const 34)
    (i32.eq)
    (if (result i32) (then (i32.const 0)) (else (unreachable)))
    (drop)
    (get_local 1)
    (i32.const 10)
    (i32.const 4)
    (i32.mul)
    (i32.add)
    (i32.load align=1)
    (i32.const 55)
    (i32.eq)
    (if (result i32) (then (i32.const 0)) (else (unreachable)))
    (drop)
  )
  (start 0)
)
Interpreting the .wat:
