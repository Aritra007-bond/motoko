-- Checking mutrec2.as:
let even : Nat -> Bool
let odd : Nat -> Bool
var sub : Nat
-- Interpreting mutrec2.as:
even(0)
  <= true
even(2)
  odd(1)
    even(0)
      <= true
    <= true
  <= true
even(4)
  odd(3)
    even(2)
      odd(1)
        even(0)
          <= true
        <= true
      <= true
    <= true
  <= true
even(6)
  odd(5)
    even(4)
      odd(3)
        even(2)
          odd(1)
            even(0)
              <= true
            <= true
          <= true
        <= true
      <= true
    <= true
  <= true
odd(5)
  even(4)
    odd(3)
      even(2)
        odd(1)
          even(0)
            <= true
          <= true
        <= true
      <= true
    <= true
  <= true
odd(6)
  even(5)
    odd(4)
      even(3)
        odd(2)
          even(1)
            odd(0)
              <= false
            <= false
          <= false
        <= false
      <= false
    <= false
  <= false
-- Finished mutrec2.as:
let even : Nat -> Bool = func
let odd : Nat -> Bool = func

mutrec2.as:12.12-12.17: fatal error, Invalid_argument("as_nat")

Raised at file "value.ml", line 163, characters 22-42
Called from file "value.ml", line 214, characters 34-44
Called from file "main.ml", line 37, characters 18-62
Called from file "map.ml", line 270, characters 20-25
Called from file "main.ml", line 79, characters 6-42

Last context:
even = func
n = 0
odd = func
sub = 1

