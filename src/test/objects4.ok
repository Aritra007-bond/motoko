Interpreter:
-- Checking objects4.as:
let oddeven : {even : Int -> Bool; odd : Int -> Bool}
-- Interpreting objects4.as:
even(10)
  even(9)
    even(8)
      even(7)
        even(6)
          even(5)
            even(4)
              even(3)
                even(2)
                  even(1)
                    even(0)
                      <= true
                    <= true
                  <= true
                <= true
              <= true
            <= true
          <= true
        <= true
      <= true
    <= true
  <= true
-- Finished objects4.as:
let oddeven : {even : Int -> Bool; odd : Int -> Bool} = {even = func; odd = func}

Compiler:
compile_exp: (CallE (DotE (VarE oddeven) even) (LitE (IntLit 10)))
compile_exp: (DecE
  (FuncD
    odd
    (AnnotP (VarP n) (PrimT Int))
    (PrimT Bool)
    (IfE
      (RelE (VarE n) GtOp (LitE (NatLit 0)))
      (CallE (DotE (VarE this) odd) (BinE (VarE n) SubOp (LitE (IntLit 1))))
      (LitE (BoolLit false))
    )
  )
)
compile_exp: (DecE
  (FuncD
    even
    (AnnotP (VarP n) (PrimT Int))
    (PrimT Bool)
    (IfE
      (RelE (VarE n) GtOp (LitE (NatLit 0)))
      (CallE (DotE (VarE this) even) (BinE (VarE n) SubOp (LitE (IntLit 1))))
      (LitE (BoolLit true))
    )
  )
)
(module
  (type $0 (func))
  (memory $0 100)
  (global $0 (mut i32) (i32.const 0))
  (func $0
    (type 0)
    (local i32 i32)
    (i32.const 8)
    (set_local 0)
    (get_global 0)
    (get_global 0)
    (get_local 0)
    (i32.add)
    (set_global 0)
    (tee_local 0)
    (get_local 0)
    (i32.const 0)
    (i32.add)
    (unreachable)
    (i32.store align=1)
    (tee_local 0)
    (get_local 0)
    (i32.const 4)
    (i32.add)
    (unreachable)
    (i32.store align=1)
    (set_local 1)
    (unreachable)
    (if (result i32) (then (i32.const 0)) (else (unreachable)))
    (drop)
  )
  (start 0)
)
Interpreting the .wat:
objects4.wat:19.5-19.18: runtime trap: unreachable executed
