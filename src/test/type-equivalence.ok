Interpreter:
-- Checking type-equivalence.as:
-- Interpreting type-equivalence.as:
-- Finished type-equivalence.as:

Compiler:
compile_dec: (ClassD C (X AnyT) Object (TupP))
compile_dec: (FuncD
  f
  (X AnyT)
  (AnnotP (VarP x) (VarT A (VarT X)))
  (VarT A (VarT X))
  (AnnotE (VarE x) (VarT B (VarT X)))
)
compile_dec: (ClassD C (X AnyT) (Y AnyT) Object (TupP))
compile_dec: (FuncD
  f
  (X AnyT)
  (AnnotP (VarP x) (VarT A (VarT X)))
  (VarT A (VarT X))
  (AnnotE (VarE x) (VarT B (VarT X)))
)
compile_dec: (ClassD C (X AnyT) Object (TupP))
(module
  (type $0 (func))
  (type $1 (func (param i32 i32) (result i32)))
  (table $0 15 15 anyfunc)
  (memory $0 100)
  (global $0 (mut i32) (i32.const 0))
  (func $0 (type 1) (local i32 i32) (get_local 1) (set_local 3) (get_local 3))
  (func $1 (type 1) (local i32 i32) (get_local 1) (set_local 3) (get_local 3))
  (func $2 (type 1) (local i32 i32) (get_local 1) (set_local 3) (get_local 3))
  (func $3 (type 1) (local i32 i32) (get_local 1) (set_local 3) (get_local 3))
  (func $4 (type 1) (local i32 i32) (get_local 1) (set_local 3) (get_local 3))
  (func $5 (type 1) (local i32 i32) (get_local 1) (set_local 3) (get_local 3))
  (func $6 (type 1) (local i32 i32) (get_local 1) (set_local 3) (get_local 3))
  (func $7 (type 1) (local i32 i32) (get_local 1) (set_local 3) (get_local 3))
  (func $8 (type 1) (local i32 i32) (get_local 1) (set_local 3) (get_local 3))
  (func $9 (type 1) (local i32 i32) (get_local 1) (set_local 3) (get_local 3))
  (func $10 (type 1) (local i32 i32) (get_local 1) (set_local 3) (get_local 3))
  (func $11 (type 1) (local i32 i32) (get_local 1) (set_local 3) (get_local 3))
  (func $12 (type 1) (local i32 i32) (get_local 1) (set_local 3) (get_local 3))
  (func $13 (type 1) (local i32 i32) (get_local 1) (set_local 3) (get_local 3))
  (func $14
    (type 0)
    (local i32 i32 i32 i32 i32 i32 i32 i32 i32 i32 i32 i32 i32 i32 i32)
    (get_global 0)
    (get_global 0)
    (i32.const 4)
    (i32.add)
    (set_global 0)
    (set_local 14)
    (get_local 14)
    (i32.const 13)
    (i32.store)
    (get_local 14)
    (drop)
    (get_global 0)
    (get_global 0)
    (i32.const 4)
    (i32.add)
    (set_global 0)
    (set_local 13)
    (get_local 13)
    (i32.const 12)
    (i32.store)
    (get_local 13)
    (drop)
    (get_global 0)
    (get_global 0)
    (i32.const 4)
    (i32.add)
    (set_global 0)
    (set_local 12)
    (get_local 12)
    (i32.const 11)
    (i32.store)
    (get_local 12)
    (drop)
    (get_global 0)
    (get_global 0)
    (i32.const 4)
    (i32.add)
    (set_global 0)
    (set_local 11)
    (get_local 11)
    (i32.const 10)
    (i32.store)
    (get_local 11)
    (drop)
    (get_global 0)
    (get_global 0)
    (i32.const 4)
    (i32.add)
    (set_global 0)
    (set_local 10)
    (get_local 10)
    (i32.const 9)
    (i32.store)
    (get_local 10)
    (drop)
    (get_global 0)
    (get_global 0)
    (i32.const 4)
    (i32.add)
    (set_global 0)
    (set_local 9)
    (get_local 9)
    (i32.const 8)
    (i32.store)
    (get_local 9)
    (drop)
    (get_global 0)
    (get_global 0)
    (i32.const 4)
    (i32.add)
    (set_global 0)
    (set_local 8)
    (get_local 8)
    (i32.const 7)
    (i32.store)
    (get_local 8)
    (drop)
    (drop)
    (drop)
    (get_global 0)
    (get_global 0)
    (i32.const 4)
    (i32.add)
    (set_global 0)
    (set_local 7)
    (get_local 7)
    (i32.const 6)
    (i32.store)
    (get_local 7)
    (drop)
    (get_global 0)
    (get_global 0)
    (i32.const 4)
    (i32.add)
    (set_global 0)
    (set_local 6)
    (get_local 6)
    (i32.const 5)
    (i32.store)
    (get_local 6)
    (drop)
    (get_global 0)
    (get_global 0)
    (i32.const 4)
    (i32.add)
    (set_global 0)
    (set_local 5)
    (get_local 5)
    (i32.const 4)
    (i32.store)
    (get_local 5)
    (drop)
    (get_global 0)
    (get_global 0)
    (i32.const 4)
    (i32.add)
    (set_global 0)
    (set_local 4)
    (get_local 4)
    (i32.const 3)
    (i32.store)
    (get_local 4)
    (drop)
    (get_global 0)
    (get_global 0)
    (i32.const 4)
    (i32.add)
    (set_global 0)
    (set_local 3)
    (get_local 3)
    (i32.const 2)
    (i32.store)
    (get_local 3)
    (drop)
    (get_global 0)
    (get_global 0)
    (i32.const 4)
    (i32.add)
    (set_global 0)
    (set_local 2)
    (get_local 2)
    (i32.const 1)
    (i32.store)
    (get_local 2)
    (drop)
    (get_global 0)
    (get_global 0)
    (i32.const 4)
    (i32.add)
    (set_global 0)
    (set_local 1)
    (get_local 1)
    (i32.const 0)
    (i32.store)
    (get_local 1)
    (drop)
  )
  (start 14)
  (elem 0 (offset (i32.const 0)) 0 1 2 3 4 5 6 7 8 9 10 11 12 13 14)
)
Interpreting the .wat:
type-equivalence.wat:101.5-101.11: invalid module: type mismatch: operator requires [_] but stack has []
