Interpreter:
-- Checking switch.as:
let no : Nat?
let oo : {}?
let x1 : Nat
let x2 : Int
let x3 : Int
let x4 : Nat
let x5 : Nat
let x6 : Nat
let x7 : Nat
let x8 : Nat
let x9 : Nat
-- Interpreting switch.as:
-- Finished switch.as:
let no : Nat? = 0
let oo : {}? = {}
let x1 : Nat = 1
let x2 : Int = 1
let x3 : Int = 1
let x4 : Nat = 1
let x5 : Nat = 1
let x6 : Nat = 1
let x7 : Nat = 1
let x8 : Nat = 1
let x9 : Nat = 1

Compiler:
compile_exp: (SwitchE
  (LitE (NatLit 4))
  (case (AltP (LitP (NatLit 0)) (LitP (NatLit 1))) (LitE (NatLit 0)))
  (case
    (AltP (LitP (NatLit 3)) (AltP (LitP (NatLit 4)) (LitP (NatLit 5))))
    (LitE (NatLit 1))
  )
  (case WildP (LitE (NatLit 2)))
)
compile_exp: (SwitchE
  (LitE (NatLit 3))
  (case (AltP (LitP (NatLit 0)) (LitP (NatLit 1))) (LitE (NatLit 0)))
  (case (AltP (LitP (NatLit 3)) (LitP (NatLit 4))) (LitE (NatLit 1)))
  (case WildP (LitE (NatLit 2)))
)
compile_exp: (SwitchE
  (VarE no)
  (case (LitP NullLit) (LitE (NatLit 0)))
  (case (LitP (NatLit 0)) (LitE (NatLit 1)))
  (case (VarP n) (VarE n))
)
compile_exp: (SwitchE
  (VarE oo)
  (case (LitP NullLit) (LitE (NatLit 0)))
  (case WildP (LitE (NatLit 1)))
)
compile_exp: (SwitchE
  (OptE (ObjE Object anon-object-25.18))
  (case (LitP NullLit) (LitE (NatLit 0)))
  (case (VarP x) (LitE (NatLit 1)))
)
compile_exp: (SwitchE
  (AnnotE (LitE NullLit) (OptT (ObjT Object)))
  (case (LitP NullLit) (LitE (NatLit 1)))
  (case WildP (LitE (NatLit 0)))
)
compile_exp: (SwitchE
  (LitE (NatLit 4))
  (case (LitP (NatLit 0)) (UnE PosOp (LitE (NatLit 0))))
  (case (LitP (IntLit 2)) (UnE NegOp (LitE (NatLit 1))))
  (case (VarP x) (BinE (VarE x) SubOp (LitE (NatLit 3))))
)
compile_exp: (SwitchE
  (UnE NegOp (LitE (NatLit 3)))
  (case (LitP (IntLit 0)) (LitE (IntLit 0)))
  (case (SignP NegOp (IntLit 1)) (LitE (IntLit 2)))
  (case (SignP NegOp (IntLit 3)) (LitE (IntLit 1)))
  (case (VarP x) (VarE x))
)
compile_exp: (SwitchE
  (LitE (NatLit 2))
  (case (LitP (NatLit 0)) (LitE (NatLit 0)))
  (case (LitP (NatLit 2)) (LitE (NatLit 1)))
  (case WildP (LitE (NatLit 2)))
)
(module
  (type $0 (func))
  (type $1 (func (param i32 i32) (result i32)))
  (table $0 1 1 anyfunc)
  (memory $0 1024)
  (global $0 (mut i32) (i32.const 0))
  (func $0
    (type 0)
    (local i32 i32 i32 i32 i32 i32 i32 i32 i32 i32 i32 i32 i32 i32)
    (get_global 0)
    (get_global 0)
    (i32.const 4)
    (i32.add)
    (set_global 0)
    (set_local 1)
    (get_global 0)
    (get_global 0)
    (i32.const 4)
    (i32.add)
    (set_global 0)
    (set_local 2)
    (get_global 0)
    (get_global 0)
    (i32.const 4)
    (i32.add)
    (set_global 0)
    (set_local 3)
    (get_global 0)
    (get_global 0)
    (i32.const 4)
    (i32.add)
    (set_global 0)
    (set_local 4)
    (get_global 0)
    (get_global 0)
    (i32.const 4)
    (i32.add)
    (set_global 0)
    (set_local 5)
    (get_global 0)
    (get_global 0)
    (i32.const 4)
    (i32.add)
    (set_global 0)
    (set_local 6)
    (get_global 0)
    (get_global 0)
    (i32.const 4)
    (i32.add)
    (set_global 0)
    (set_local 7)
    (get_global 0)
    (get_global 0)
    (i32.const 4)
    (i32.add)
    (set_global 0)
    (set_local 8)
    (get_global 0)
    (get_global 0)
    (i32.const 4)
    (i32.add)
    (set_global 0)
    (set_local 9)
    (get_global 0)
    (get_global 0)
    (i32.const 4)
    (i32.add)
    (set_global 0)
    (set_local 10)
    (get_global 0)
    (get_global 0)
    (i32.const 4)
    (i32.add)
    (set_global 0)
    (set_local 11)
    (unreachable)
    (set_local 0)
    (block (get_local 0) (set_local 0) (get_local 1) (get_local 0) (i32.store))
    (unreachable)
    (set_local 0)
    (block (get_local 0) (set_local 0) (get_local 2) (get_local 0) (i32.store))
    (unreachable)
    (set_local 0)
    (block (get_local 0) (set_local 0) (get_local 3) (get_local 0) (i32.store))
    (unreachable)
    (set_local 0)
    (block (get_local 0) (set_local 0) (get_local 4) (get_local 0) (i32.store))
    (unreachable)
    (set_local 0)
    (block (get_local 0) (set_local 0) (get_local 5) (get_local 0) (i32.store))
    (get_global 0)
    (get_global 0)
    (i32.const 4)
    (i32.add)
    (set_global 0)
    (set_local 12)
    (get_global 0)
    (get_global 0)
    (i32.const 4)
    (i32.add)
    (set_global 0)
    (tee_local 13)
    (get_local 12)
    (i32.store)
    (get_local 12)
    (set_local 0)
    (block (get_local 0) (set_local 0) (get_local 6) (get_local 0) (i32.store))
    (unreachable)
    (set_local 0)
    (block (get_local 0) (set_local 0) (get_local 7) (get_local 0) (i32.store))
    (i32.const 0)
    (set_local 0)
    (block (get_local 0) (set_local 0) (get_local 8) (get_local 0) (i32.store))
    (unreachable)
    (set_local 0)
    (block (get_local 0) (set_local 0) (get_local 9) (get_local 0) (i32.store))
    (unreachable)
    (set_local 0)
    (block (get_local 0) (set_local 0) (get_local 10) (get_local 0) (i32.store))
    (unreachable)
    (tee_local 0)
    (get_local 0)
    (set_local 0)
    (block (get_local 0) (set_local 0) (get_local 11) (get_local 0) (i32.store))
    (drop)
  )
  (start 0)
  (elem 0 (offset (i32.const 0)) 0)
)
Interpreting the .wat:
switch.wat:76.5-76.18: runtime trap: unreachable executed
