Interpreter:
-- Checking array.as:
let a : var Nat[]
let b : var Nat[]
-- Interpreting array.as:
-- Finished array.as:
let a : var Nat[] = [1, 5, 42]
let b : var Nat[] = [2, 6, 23]

Compiler:
(module
  (type $0 (func))
  (memory $0 100)
  (global $0 (mut i32) (i32.const 0))
  (func $0
    (type 0)
    (local i32 i32 i32)
    (i32.const 12)
    (get_global 0)
    (set_local 0)
    (get_global 0)
    (i32.add)
    (set_global 0)
    (get_local 0)
    (tee_local 0)
    (get_local 0)
    (i32.const 0)
    (i32.add)
    (i32.const 1)
    (i32.store align=1)
    (tee_local 0)
    (get_local 0)
    (i32.const 4)
    (i32.add)
    (i32.const 2)
    (i32.store align=1)
    (tee_local 0)
    (get_local 0)
    (i32.const 8)
    (i32.add)
    (i32.const 42)
    (i32.store align=1)
    (set_local 1)
    (get_local 1)
    (i32.const 0)
    (i32.const 4)
    (i32.mul)
    (i32.add)
    (i32.load align=1)
    (i32.const 1)
    (i32.eq)
    (if (then) (else (unreachable)))
    (get_local 1)
    (i32.const 1)
    (i32.const 4)
    (i32.mul)
    (i32.add)
    (i32.load align=1)
    (i32.const 2)
    (i32.eq)
    (if (then) (else (unreachable)))
    (get_local 1)
    (i32.const 2)
    (i32.const 4)
    (i32.mul)
    (i32.add)
    (i32.load align=1)
    (i32.const 42)
    (i32.eq)
    (if (then) (else (unreachable)))
    (i32.const 12)
    (get_global 0)
    (set_local 0)
    (get_global 0)
    (i32.add)
    (set_global 0)
    (get_local 0)
    (tee_local 0)
    (get_local 0)
    (i32.const 0)
    (i32.add)
    (i32.const 2)
    (i32.store align=1)
    (tee_local 0)
    (get_local 0)
    (i32.const 4)
    (i32.add)
    (i32.const 3)
    (i32.store align=1)
    (tee_local 0)
    (get_local 0)
    (i32.const 8)
    (i32.add)
    (i32.const 23)
    (i32.store align=1)
    (set_local 2)
    (get_local 2)
    (i32.const 0)
    (i32.const 4)
    (i32.mul)
    (i32.add)
    (i32.load align=1)
    (i32.const 2)
    (i32.eq)
    (if (then) (else (unreachable)))
    (get_local 2)
    (i32.const 1)
    (i32.const 4)
    (i32.mul)
    (i32.add)
    (i32.load align=1)
    (i32.const 3)
    (i32.eq)
    (if (then) (else (unreachable)))
    (get_local 2)
    (i32.const 2)
    (i32.const 4)
    (i32.mul)
    (i32.add)
    (i32.load align=1)
    (i32.const 23)
    (i32.eq)
    (if (then) (else (unreachable)))
    (get_local 1)
    (i32.const 0)
    (i32.const 4)
    (i32.mul)
    (i32.add)
    (i32.load align=1)
    (i32.const 1)
    (i32.eq)
    (if (then) (else (unreachable)))
    (get_local 1)
    (i32.const 1)
    (i32.const 4)
    (i32.mul)
    (i32.add)
    (i32.load align=1)
    (i32.const 2)
    (i32.eq)
    (if (then) (else (unreachable)))
    (get_local 1)
    (i32.const 2)
    (i32.const 4)
    (i32.mul)
    (i32.add)
    (i32.load align=1)
    (i32.const 42)
    (i32.eq)
    (if (then) (else (unreachable)))
    (get_local 1)
    (i32.const 1)
    (i32.const 4)
    (i32.mul)
    (i32.add)
    (i32.const 5)
    (i32.store align=1)
    (get_local 2)
    (i32.const 1)
    (i32.const 4)
    (i32.mul)
    (i32.add)
    (i32.const 6)
    (i32.store align=1)
    (get_local 1)
    (i32.const 1)
    (i32.const 4)
    (i32.mul)
    (i32.add)
    (i32.load align=1)
    (i32.const 5)
    (i32.eq)
    (if (then) (else (unreachable)))
    (get_local 2)
    (i32.const 1)
    (i32.const 4)
    (i32.mul)
    (i32.add)
    (i32.load align=1)
    (i32.const 6)
    (i32.eq)
    (if (then) (else (unreachable)))
  )
  (start 0)
)
Interpreting the .wat:
