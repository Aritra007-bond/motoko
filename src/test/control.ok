Interpreter:
-- Checking control.as:
type Control <: actor {testBlock : () -> (); testLoop : () -> (); testLoopWhile : () -> (); testNestedWhile : () -> (); testWhile : () -> ()}
let Control : () -> Control
-- Interpreting control.as:
-- Finished control.as:
let Control : () -> Control = func

Compiler:
compile_exp: (LoopE
  (LabelE
    continue l
    (TupT)
    (BlockE
      (ExpD
        (IfE (LitE (BoolLit true)) (BreakE l (TupE)) (BreakE continue l (TupE)))
      )
    )
  )
  (CallE (VarE condition) (TupE))
)
(module
  (type $0 (func))
  (type $1 (func (param i32 i32) (result i32)))
  (table $0 8 8 anyfunc)
  (memory $0 1024)
  (global $0 (mut i32) (i32.const 0))
  (func $0
    (type 1)
    (local i32)
    (get_local 1)
    (set_local 2)
    (block (result i32) (get_local 2) (drop) (i32.const 1))
    (if (then) (else (unreachable)))
    (i32.const 0)
  )
  (func $1
    (type 1)
    (local i32 i32 i32 i32 i32 i32)
    (get_local 1)
    (set_local 2)
    (block (result i32) (get_local 2) (drop) (i32.const 1))
    (if (then) (else (unreachable)))
    (get_global 0)
    (get_global 0)
    (i32.const 4)
    (i32.add)
    (set_global 0)
    (set_local 3)
    (get_global 0)
    (get_global 0)
    (i32.const 4)
    (i32.add)
    (set_global 0)
    (set_local 4)
    (get_global 0)
    (get_global 0)
    (i32.const 4)
    (i32.add)
    (set_global 0)
    (set_local 5)
    (get_global 0)
    (get_global 0)
    (i32.const 4)
    (i32.add)
    (set_global 0)
    (set_local 6)
    (block (result i32) (i32.const 0) (br 0))
    (drop)
    (block (result i32) (i32.const 0) (br 0))
    (drop)
    (block
      (result i32)
      (get_global 0)
      (get_global 0)
      (i32.const 4)
      (i32.add)
      (set_global 0)
      (set_local 7)
      (i32.const 1)
      (i32.const 0)
      (br 1)
      (i32.add)
      (tee_local 2)
      (get_local 2)
      (set_local 2)
      (block
        (result i32)
        (get_local 2)
        (set_local 2)
        (get_local 7)
        (get_local 2)
        (i32.store)
        (i32.const 1)
      )
      (if (then) (else (unreachable)))
    )
    (drop)
    (block (result i32) (i32.const 0) (br 0))
    (set_local 2)
    (block
      (result i32)
      (get_local 2)
      (set_local 2)
      (get_local 3)
      (get_local 2)
      (i32.store)
      (i32.const 1)
    )
    (if (then) (else (unreachable)))
    (block (result i32) (i32.const 0) (br 0))
    (tee_local 2)
    (get_local 2)
    (set_local 2)
    (block
      (result i32)
      (get_local 2)
      (tee_local 2)
      (get_local 2)
      (i32.load)
      (set_local 2)
      (get_local 4)
      (get_local 2)
      (i32.store)
      (tee_local 2)
      (get_local 2)
      (i32.load offset=4)
      (set_local 2)
      (get_local 5)
      (get_local 2)
      (i32.store)
      (tee_local 2)
      (get_local 2)
      (i32.load offset=8)
      (set_local 2)
      (get_local 6)
      (get_local 2)
      (i32.store)
      (drop)
      (i32.const 1)
    )
    (if (then) (else (unreachable)))
  )
  (func $2
    (type 1)
    (local i32 i32 i32)
    (get_local 0)
    (i32.load offset=4)
    (set_local 3)
    (get_local 1)
    (set_local 2)
    (block (result i32) (get_local 2) (drop) (i32.const 1))
    (if (then) (else (unreachable)))
    (block
      (result i32)
      (loop
        (get_local 3)
        (i32.load)
        (set_local 4)
        (get_local 4)
        (get_global 0)
        (get_global 0)
        (i32.const 0)
        (i32.add)
        (set_global 0)
        (get_local 4)
        (i32.load)
        (call_indirect (type 1))
        (if
          (then
            (block
              (result i32)
              (i32.const 1)
              (if (result i32) (then (i32.const 0) (br 4)) (else (i32.const 0) (br 1)))
            )
            (drop)
            (br 1)
          )
          (else)
        )
      )
      (i32.const 0)
    )
  )
  (func $3
    (type 1)
    (local i32)
    (get_local 1)
    (set_local 2)
    (block (result i32) (get_local 2) (drop) (i32.const 1))
    (if (then) (else (unreachable)))
    (block
      (result i32)
      (loop
        (block
          (result i32)
          (i32.const 1)
          (if (result i32) (then (i32.const 0) (br 3)) (else (i32.const 0) (br 1)))
        )
        (br 0)
      )
      (unreachable)
    )
  )
  (func $4
    (type 1)
    (local i32 i32)
    (get_local 0)
    (i32.load offset=4)
    (set_local 3)
    (get_local 1)
    (set_local 2)
    (block (result i32) (get_local 2) (drop) (i32.const 1))
    (if (then) (else (unreachable)))
    (block (result i32) (unreachable))
  )
  (func $5
    (type 1)
    (local i32 i32 i32 i32)
    (get_local 0)
    (i32.load offset=4)
    (set_local 3)
    (get_local 1)
    (set_local 2)
    (block (result i32) (get_local 2) (drop) (i32.const 1))
    (if (then) (else (unreachable)))
    (block
      (result i32)
      (loop
        (get_local 3)
        (i32.load)
        (set_local 4)
        (get_local 4)
        (get_global 0)
        (get_global 0)
        (i32.const 0)
        (i32.add)
        (set_global 0)
        (get_local 4)
        (i32.load)
        (call_indirect (type 1))
        (if
          (then
            (block
              (result i32)
              (i32.const 1)
              (if (result i32) (then (i32.const 0) (br 4)) (else (i32.const 0) (br 1)))
              (drop)
              (block
                (result i32)
                (loop
                  (get_local 3)
                  (i32.load)
                  (set_local 5)
                  (get_local 5)
                  (get_global 0)
                  (get_global 0)
                  (i32.const 0)
                  (i32.add)
                  (set_global 0)
                  (get_local 5)
                  (i32.load)
                  (call_indirect (type 1))
                  (if
                    (then
                      (block
                        (result i32)
                        (i32.const 1)
                        (if (result i32) (then (i32.const 0) (br 5)) (else (i32.const 0) (br 4)))
                      )
                      (drop)
                      (br 1)
                    )
                    (else)
                  )
                )
                (i32.const 0)
              )
            )
            (drop)
            (br 1)
          )
          (else)
        )
      )
      (i32.const 0)
    )
  )
  (func $6
    (type 1)
    (local i32 i32 i32 i32 i32 i32 i32 i32 i32 i32 i32 i32 i32 i32 i32 i32 i32 i32 i32 i32 i32)
    (get_local 1)
    (set_local 2)
    (block (result i32) (get_local 2) (drop) (i32.const 1))
    (if (then) (else (unreachable)))
    (get_global 0)
    (get_global 0)
    (i32.const 24)
    (i32.add)
    (set_global 0)
    (set_local 3)
    (get_local 3)
    (i32.const 0)
    (i32.add)
    (set_local 4)
    (get_local 3)
    (i32.const 4)
    (i32.add)
    (set_local 5)
    (get_local 3)
    (i32.const 8)
    (i32.add)
    (set_local 6)
    (get_local 3)
    (i32.const 12)
    (i32.add)
    (set_local 7)
    (get_local 3)
    (i32.const 16)
    (i32.add)
    (set_local 8)
    (get_local 3)
    (i32.const 20)
    (i32.add)
    (set_local 9)
    (get_global 0)
    (get_global 0)
    (i32.const 4)
    (i32.add)
    (set_global 0)
    (tee_local 10)
    (get_local 3)
    (i32.store)
    (get_local 3)
    (get_global 0)
    (get_global 0)
    (i32.const 4)
    (i32.add)
    (set_global 0)
    (set_local 11)
    (get_global 0)
    (get_global 0)
    (i32.const 4)
    (i32.add)
    (set_global 0)
    (tee_local 12)
    (get_local 11)
    (i32.store)
    (get_local 11)
    (i32.const 0)
    (i32.store)
    (get_local 11)
    (i32.store)
    (get_local 3)
    (get_global 0)
    (get_global 0)
    (i32.const 4)
    (i32.add)
    (set_global 0)
    (set_local 13)
    (get_global 0)
    (get_global 0)
    (i32.const 4)
    (i32.add)
    (set_global 0)
    (tee_local 14)
    (get_local 13)
    (i32.store)
    (get_local 13)
    (i32.const 1)
    (i32.store)
    (get_local 13)
    (i32.store offset=4)
    (get_local 3)
    (get_global 0)
    (get_global 0)
    (i32.const 8)
    (i32.add)
    (set_global 0)
    (set_local 15)
    (get_global 0)
    (get_global 0)
    (i32.const 4)
    (i32.add)
    (set_global 0)
    (tee_local 16)
    (get_local 15)
    (i32.store)
    (get_local 15)
    (i32.const 2)
    (i32.store)
    (get_local 15)
    (get_local 4)
    (i32.store offset=4)
    (get_local 15)
    (i32.store offset=8)
    (get_local 3)
    (get_global 0)
    (get_global 0)
    (i32.const 4)
    (i32.add)
    (set_global 0)
    (set_local 17)
    (get_global 0)
    (get_global 0)
    (i32.const 4)
    (i32.add)
    (set_global 0)
    (tee_local 18)
    (get_local 17)
    (i32.store)
    (get_local 17)
    (i32.const 3)
    (i32.store)
    (get_local 17)
    (i32.store offset=12)
    (get_local 3)
    (get_global 0)
    (get_global 0)
    (i32.const 8)
    (i32.add)
    (set_global 0)
    (set_local 19)
    (get_global 0)
    (get_global 0)
    (i32.const 4)
    (i32.add)
    (set_global 0)
    (tee_local 20)
    (get_local 19)
    (i32.store)
    (get_local 19)
    (i32.const 4)
    (i32.store)
    (get_local 19)
    (get_local 4)
    (i32.store offset=4)
    (get_local 19)
    (i32.store offset=16)
    (get_local 3)
    (get_global 0)
    (get_global 0)
    (i32.const 8)
    (i32.add)
    (set_global 0)
    (set_local 21)
    (get_global 0)
    (get_global 0)
    (i32.const 4)
    (i32.add)
    (set_global 0)
    (tee_local 22)
    (get_local 21)
    (i32.store)
    (get_local 21)
    (i32.const 5)
    (i32.store)
    (get_local 21)
    (get_local 4)
    (i32.store offset=4)
    (get_local 21)
    (i32.store offset=20)
    (get_local 3)
  )
  (func $7
    (type 0)
    (local i32 i32 i32)
    (get_global 0)
    (get_global 0)
    (i32.const 4)
    (i32.add)
    (set_global 0)
    (set_local 1)
    (get_global 0)
    (get_global 0)
    (i32.const 4)
    (i32.add)
    (set_global 0)
    (tee_local 2)
    (get_local 1)
    (i32.store)
    (get_local 1)
    (i32.const 6)
    (i32.store)
    (get_local 1)
    (drop)
  )
  (start 7)
  (elem 0 (offset (i32.const 0)) 0 1 2 3 4 5 6 7)
)
Interpreting the .wat:
