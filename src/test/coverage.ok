Interpreter:
-- Checking coverage.as:
let f : () -> ()
-- Interpreting coverage.as:
-- Finished coverage.as:
let f : () -> () = func

coverage.as:4.7-4.8: warning, this pattern does not cover all possible values
coverage.as:5.13-5.14: warning, this pattern alternative is unreachable
coverage.as:5.8-5.14: warning, this pattern does not cover all possible values
coverage.as:7.13-7.14: warning, this pattern alternative is unreachable
coverage.as:8.13-8.14: warning, this pattern alternative is unreachable
coverage.as:11.7-11.9: warning, this pattern does not cover all possible values
coverage.as:15.8-15.9: warning, this pattern does not cover all possible values
coverage.as:16.13-16.14: warning, this pattern alternative is unreachable
coverage.as:16.8-16.14: warning, this pattern does not cover all possible values
coverage.as:18.13-18.14: warning, this pattern alternative is unreachable
coverage.as:19.14-19.15: warning, this pattern alternative is unreachable
coverage.as:23.3-23.25: warning, the cases in this switch do not cover all possible values
coverage.as:24.24-24.33: warning, this case is unreachable
coverage.as:24.3-24.35: warning, the cases in this switch do not cover all possible values
coverage.as:27.24-27.33: warning, this case is unreachable
coverage.as:28.24-28.33: warning, this case is unreachable
coverage.as:29.24-29.33: warning, this case is unreachable
coverage.as:30.24-30.33: warning, this case is unreachable
coverage.as:31.24-31.33: warning, this case is unreachable
coverage.as:32.42-32.43: warning, this pattern alternative is unreachable
coverage.as:32.3-32.49: warning, the cases in this switch do not cover all possible values
coverage.as:33.34-33.48: warning, this case is unreachable
coverage.as:34.41-34.50: warning, this case is unreachable
coverage.as:35.3-35.50: warning, the cases in this switch do not cover all possible values
Compiler:
coverage.as:4.7-4.8: warning, this pattern does not cover all possible values
coverage.as:5.13-5.14: warning, this pattern alternative is unreachable
coverage.as:5.8-5.14: warning, this pattern does not cover all possible values
coverage.as:7.13-7.14: warning, this pattern alternative is unreachable
coverage.as:8.13-8.14: warning, this pattern alternative is unreachable
coverage.as:11.7-11.9: warning, this pattern does not cover all possible values
coverage.as:15.8-15.9: warning, this pattern does not cover all possible values
coverage.as:16.13-16.14: warning, this pattern alternative is unreachable
coverage.as:16.8-16.14: warning, this pattern does not cover all possible values
coverage.as:18.13-18.14: warning, this pattern alternative is unreachable
coverage.as:19.14-19.15: warning, this pattern alternative is unreachable
coverage.as:23.3-23.25: warning, the cases in this switch do not cover all possible values
coverage.as:24.24-24.33: warning, this case is unreachable
coverage.as:24.3-24.35: warning, the cases in this switch do not cover all possible values
coverage.as:27.24-27.33: warning, this case is unreachable
coverage.as:28.24-28.33: warning, this case is unreachable
coverage.as:29.24-29.33: warning, this case is unreachable
coverage.as:30.24-30.33: warning, this case is unreachable
coverage.as:31.24-31.33: warning, this case is unreachable
coverage.as:32.42-32.43: warning, this pattern alternative is unreachable
coverage.as:32.3-32.49: warning, the cases in this switch do not cover all possible values
coverage.as:33.34-33.48: warning, this case is unreachable
coverage.as:34.41-34.50: warning, this case is unreachable
coverage.as:35.3-35.50: warning, the cases in this switch do not cover all possible values
(module
  (type $0 (func))
  (type $1 (func (param i32 i32) (result i32)))
  (table $0 9 9 anyfunc)
  (memory $0 1024)
  (global $0 (mut i32) (i32.const 0))
  (func $0
    (type 1)
    (local i32 i32)
    (get_local 1)
    (set_local 2)
    (block
      (result i32)
      (get_local 2)
      (set_local 3)
      (block (result i32) (get_local 3) (drop) (i32.const 1))
      (if
        (then)
        (else
          (block (result i32) (get_local 3) (drop) (i32.const 1))
          (if (then) (else (i32.const 0) (br 3)))
        )
      )
      (i32.const 1)
    )
    (if (then) (else (unreachable)))
    (i32.const 0)
  )
  (func $1
    (type 1)
    (local i32 i32)
    (get_local 1)
    (set_local 2)
    (block
      (result i32)
      (get_local 2)
      (set_local 3)
      (block (result i32) (get_local 3) (drop) (i32.const 1))
      (if
        (then)
        (else
          (block
            (result i32)
            (get_local 3)
            (i32.const 6)
            (i32.eq)
            (if (then) (else (i32.const 0) (br 1)))
            (i32.const 1)
          )
          (if (then) (else (i32.const 0) (br 3)))
        )
      )
      (i32.const 1)
    )
    (if (then) (else (unreachable)))
    (i32.const 0)
  )
  (func $2
    (type 1)
    (local i32 i32)
    (get_local 1)
    (set_local 2)
    (block
      (result i32)
      (get_local 2)
      (set_local 3)
      (block
        (result i32)
        (get_local 3)
        (i32.const 5)
        (i32.eq)
        (if (then) (else (i32.const 0) (br 1)))
        (i32.const 1)
      )
      (if
        (then)
        (else
          (block (result i32) (get_local 3) (drop) (i32.const 1))
          (if (then) (else (i32.const 0) (br 3)))
        )
      )
      (i32.const 1)
    )
    (if (then) (else (unreachable)))
    (i32.const 0)
  )
  (func $3
    (type 1)
    (local i32 i32)
    (get_local 1)
    (set_local 2)
    (block
      (result i32)
      (get_local 2)
      (set_local 3)
      (block
        (result i32)
        (get_local 3)
        (i32.const 5)
        (i32.eq)
        (if (then) (else (i32.const 0) (br 1)))
        (i32.const 1)
      )
      (if
        (then)
        (else
          (block
            (result i32)
            (get_local 3)
            (i32.const 5)
            (i32.eq)
            (if (then) (else (i32.const 0) (br 1)))
            (i32.const 1)
          )
          (if (then) (else (i32.const 0) (br 3)))
        )
      )
      (i32.const 1)
    )
    (if (then) (else (unreachable)))
    (i32.const 0)
  )
  (func $4
    (type 1)
    (local i32)
    (get_local 1)
    (set_local 2)
    (block
      (result i32)
      (get_local 2)
      (i32.const 5)
      (i32.eq)
      (if (then) (else (i32.const 0) (br 2)))
      (i32.const 1)
    )
    (if (then) (else (unreachable)))
    (i32.const 0)
  )
  (func $5
    (type 1)
    (local i32 i32)
    (get_global 0)
    (get_global 0)
    (i32.const 4)
    (i32.add)
    (set_global 0)
    (set_local 3)
    (get_local 1)
    (set_local 2)
    (block
      (result i32)
      (get_local 2)
      (set_local 2)
      (get_local 3)
      (get_local 2)
      (i32.store)
      (i32.const 1)
    )
    (if (then) (else (unreachable)))
    (i32.const 0)
  )
  (func $6
    (type 1)
    (local i32)
    (get_local 1)
    (set_local 2)
    (block (result i32) (get_local 2) (drop) (i32.const 1))
    (if (then) (else (unreachable)))
    (i32.const 0)
  )
  (func $7
    (type 1)
    (local
      i32
      i32
      i32
      i32
      i32
      i32
      i32
      i32
      i32
      i32
      i32
      i32
      i32
      i32
      i32
      i32
      i32
      i32
      i32
      i32
      i32
      i32
      i32
      i32
      i32
      i32
      i32
      i32
      i32
      i32
      i32
      i32
      i32
      i32
      i32
      i32
      i32
      i32
      i32
      i32
      i32
      i32
      i32
      i32
      i32
      i32
    )
    (get_local 1)
    (set_local 2)
    (block (result i32) (get_local 2) (drop) (i32.const 1))
    (if (then) (else (unreachable)))
    (get_global 0)
    (get_global 0)
    (i32.const 4)
    (i32.add)
    (set_global 0)
    (set_local 3)
    (get_global 0)
    (get_global 0)
    (i32.const 4)
    (i32.add)
    (set_global 0)
    (set_local 8)
    (get_global 0)
    (get_global 0)
    (i32.const 4)
    (i32.add)
    (set_global 0)
    (set_local 9)
    (get_global 0)
    (get_global 0)
    (i32.const 4)
    (i32.add)
    (set_global 0)
    (tee_local 10)
    (get_local 9)
    (i32.store)
    (get_global 0)
    (get_global 0)
    (i32.const 4)
    (i32.add)
    (set_global 0)
    (set_local 11)
    (get_global 0)
    (get_global 0)
    (i32.const 4)
    (i32.add)
    (set_global 0)
    (tee_local 12)
    (get_local 11)
    (i32.store)
    (get_global 0)
    (get_global 0)
    (i32.const 4)
    (i32.add)
    (set_global 0)
    (set_local 13)
    (get_global 0)
    (get_global 0)
    (i32.const 4)
    (i32.add)
    (set_global 0)
    (tee_local 14)
    (get_local 13)
    (i32.store)
    (get_global 0)
    (get_global 0)
    (i32.const 4)
    (i32.add)
    (set_global 0)
    (set_local 15)
    (get_global 0)
    (get_global 0)
    (i32.const 4)
    (i32.add)
    (set_global 0)
    (tee_local 16)
    (get_local 15)
    (i32.store)
    (get_global 0)
    (get_global 0)
    (i32.const 4)
    (i32.add)
    (set_global 0)
    (set_local 17)
    (get_global 0)
    (get_global 0)
    (i32.const 4)
    (i32.add)
    (set_global 0)
    (tee_local 18)
    (get_local 17)
    (i32.store)
    (get_global 0)
    (get_global 0)
    (i32.const 4)
    (i32.add)
    (set_global 0)
    (set_local 19)
    (get_global 0)
    (get_global 0)
    (i32.const 4)
    (i32.add)
    (set_global 0)
    (tee_local 20)
    (get_local 19)
    (i32.store)
    (get_global 0)
    (get_global 0)
    (i32.const 4)
    (i32.add)
    (set_global 0)
    (set_local 21)
    (get_global 0)
    (get_global 0)
    (i32.const 4)
    (i32.add)
    (set_global 0)
    (tee_local 22)
    (get_local 21)
    (i32.store)
    (i32.const 0)
    (set_local 2)
    (block (result i32) (get_local 2) (drop) (i32.const 1))
    (if (then) (else (unreachable)))
    (i32.const 0)
    (set_local 2)
    (block
      (result i32)
      (get_local 2)
      (set_local 2)
      (get_local 3)
      (get_local 2)
      (i32.store)
      (i32.const 1)
    )
    (if (then) (else (unreachable)))
    (i32.const 0)
    (set_local 2)
    (block
      (result i32)
      (get_local 2)
      (i32.const 5)
      (i32.eq)
      (if (then) (else (i32.const 0) (br 2)))
      (i32.const 1)
    )
    (if (then) (else (unreachable)))
    (i32.const 0)
    (set_local 2)
    (block
      (result i32)
      (get_local 2)
      (set_local 4)
      (block
        (result i32)
        (get_local 4)
        (i32.const 5)
        (i32.eq)
        (if (then) (else (i32.const 0) (br 1)))
        (i32.const 1)
      )
      (if
        (then)
        (else
          (block
            (result i32)
            (get_local 4)
            (i32.const 5)
            (i32.eq)
            (if (then) (else (i32.const 0) (br 1)))
            (i32.const 1)
          )
          (if (then) (else (i32.const 0) (br 3)))
        )
      )
      (i32.const 1)
    )
    (if (then) (else (unreachable)))
    (i32.const 0)
    (set_local 2)
    (block
      (result i32)
      (get_local 2)
      (set_local 5)
      (block
        (result i32)
        (get_local 5)
        (i32.const 5)
        (i32.eq)
        (if (then) (else (i32.const 0) (br 1)))
        (i32.const 1)
      )
      (if
        (then)
        (else
          (block (result i32) (get_local 5) (drop) (i32.const 1))
          (if (then) (else (i32.const 0) (br 3)))
        )
      )
      (i32.const 1)
    )
    (if (then) (else (unreachable)))
    (i32.const 0)
    (set_local 2)
    (block
      (result i32)
      (get_local 2)
      (set_local 6)
      (block (result i32) (get_local 6) (drop) (i32.const 1))
      (if
        (then)
        (else
          (block
            (result i32)
            (get_local 6)
            (i32.const 6)
            (i32.eq)
            (if (then) (else (i32.const 0) (br 1)))
            (i32.const 1)
          )
          (if (then) (else (i32.const 0) (br 3)))
        )
      )
      (i32.const 1)
    )
    (if (then) (else (unreachable)))
    (i32.const 0)
    (set_local 2)
    (block
      (result i32)
      (get_local 2)
      (set_local 7)
      (block (result i32) (get_local 7) (drop) (i32.const 1))
      (if
        (then)
        (else
          (block (result i32) (get_local 7) (drop) (i32.const 1))
          (if (then) (else (i32.const 0) (br 3)))
        )
      )
      (i32.const 1)
    )
    (if (then) (else (unreachable)))
    (i32.const 0)
    (set_local 2)
    (block
      (result i32)
      (get_local 2)
      (set_local 2)
      (get_local 8)
      (get_local 2)
      (i32.store)
      (i32.const 1)
    )
    (if (then) (else (unreachable)))
    (i32.const 0)
    (set_local 2)
    (block (result i32) (get_local 2) (drop) (i32.const 1))
    (if (then) (else (unreachable)))
    (i32.const 0)
    (set_local 2)
    (block
      (result i32)
      (get_local 2)
      (i32.const 9)
      (i32.eq)
      (if (then) (else (i32.const 0) (br 2)))
      (i32.const 1)
    )
    (if (then) (else (unreachable)))
    (get_local 9)
    (i32.const 6)
    (i32.store)
    (get_local 11)
    (i32.const 5)
    (i32.store)
    (get_local 13)
    (i32.const 4)
    (i32.store)
    (get_local 15)
    (i32.const 3)
    (i32.store)
    (get_local 17)
    (i32.const 2)
    (i32.store)
    (get_local 19)
    (i32.const 1)
    (i32.store)
    (get_local 21)
    (i32.const 0)
    (i32.store)
    (i32.const 0)
    (set_local 47)
    (block (result i32) (get_local 47) (drop) (i32.const 1))
    (if (result i32) (then (i32.const 0)) (else (unreachable)))
    (drop)
    (i32.const 0)
    (set_local 45)
    (get_global 0)
    (get_global 0)
    (i32.const 4)
    (i32.add)
    (set_global 0)
    (set_local 46)
    (block
      (result i32)
      (get_local 45)
      (set_local 2)
      (get_local 46)
      (get_local 2)
      (i32.store)
      (i32.const 1)
    )
    (if (result i32) (then (i32.const 0)) (else (unreachable)))
    (drop)
    (i32.const 0)
    (set_local 44)
    (block
      (result i32)
      (get_local 44)
      (i32.const 5)
      (i32.eq)
      (if (then) (else (i32.const 0) (br 1)))
      (i32.const 1)
    )
    (if (result i32) (then (i32.const 0)) (else (unreachable)))
    (drop)
    (i32.const 0)
    (set_local 43)
    (block
      (result i32)
      (get_local 43)
      (i32.const 5)
      (i32.eq)
      (if (then) (else (i32.const 0) (br 1)))
      (i32.const 1)
    )
    (if
      (result i32)
      (then (i32.const 0))
      (else
        (block
          (result i32)
          (get_local 43)
          (i32.const 5)
          (i32.eq)
          (if (then) (else (i32.const 0) (br 1)))
          (i32.const 1)
        )
        (if (result i32) (then (i32.const 0)) (else (unreachable)))
      )
    )
    (drop)
    (i32.const 0)
    (set_local 42)
    (block
      (result i32)
      (get_local 42)
      (i32.const 5)
      (i32.eq)
      (if (then) (else (i32.const 0) (br 1)))
      (i32.const 1)
    )
    (if
      (result i32)
      (then (i32.const 0))
      (else
        (block (result i32) (get_local 42) (drop) (i32.const 1))
        (if (result i32) (then (i32.const 0)) (else (unreachable)))
      )
    )
    (drop)
    (i32.const 0)
    (set_local 40)
    (block
      (result i32)
      (get_local 40)
      (i32.const 5)
      (i32.eq)
      (if (then) (else (i32.const 0) (br 1)))
      (i32.const 1)
    )
    (if
      (result i32)
      (then (i32.const 0))
      (else
        (get_global 0)
        (get_global 0)
        (i32.const 4)
        (i32.add)
        (set_global 0)
        (set_local 41)
        (block
          (result i32)
          (get_local 40)
          (set_local 2)
          (get_local 41)
          (get_local 2)
          (i32.store)
          (i32.const 1)
        )
        (if (result i32) (then (i32.const 0)) (else (unreachable)))
      )
    )
    (drop)
    (i32.const 0)
    (set_local 39)
    (block (result i32) (get_local 39) (drop) (i32.const 1))
    (if
      (result i32)
      (then (i32.const 0))
      (else
        (block
          (result i32)
          (get_local 39)
          (i32.const 6)
          (i32.eq)
          (if (then) (else (i32.const 0) (br 1)))
          (i32.const 1)
        )
        (if (result i32) (then (i32.const 0)) (else (unreachable)))
      )
    )
    (drop)
    (i32.const 0)
    (set_local 37)
    (block (result i32) (get_local 37) (drop) (i32.const 1))
    (if
      (result i32)
      (then (i32.const 0))
      (else
        (get_global 0)
        (get_global 0)
        (i32.const 4)
        (i32.add)
        (set_global 0)
        (set_local 38)
        (block
          (result i32)
          (get_local 37)
          (set_local 2)
          (get_local 38)
          (get_local 2)
          (i32.store)
          (i32.const 1)
        )
        (if (result i32) (then (i32.const 0)) (else (unreachable)))
      )
    )
    (drop)
    (i32.const 0)
    (set_local 35)
    (get_global 0)
    (get_global 0)
    (i32.const 4)
    (i32.add)
    (set_global 0)
    (set_local 36)
    (block
      (result i32)
      (get_local 35)
      (set_local 2)
      (get_local 36)
      (get_local 2)
      (i32.store)
      (i32.const 1)
    )
    (if
      (result i32)
      (then (i32.const 0))
      (else
        (block (result i32) (get_local 35) (drop) (i32.const 1))
        (if (result i32) (then (i32.const 0)) (else (unreachable)))
      )
    )
    (drop)
    (i32.const 0)
    (set_local 32)
    (get_global 0)
    (get_global 0)
    (i32.const 4)
    (i32.add)
    (set_global 0)
    (set_local 33)
    (block
      (result i32)
      (get_local 32)
      (set_local 2)
      (get_local 33)
      (get_local 2)
      (i32.store)
      (i32.const 1)
    )
    (if
      (result i32)
      (then (i32.const 0))
      (else
        (get_global 0)
        (get_global 0)
        (i32.const 4)
        (i32.add)
        (set_global 0)
        (set_local 34)
        (block
          (result i32)
          (get_local 32)
          (set_local 2)
          (get_local 34)
          (get_local 2)
          (i32.store)
          (i32.const 1)
        )
        (if (result i32) (then (i32.const 0)) (else (unreachable)))
      )
    )
    (drop)
    (i32.const 0)
    (set_local 31)
    (block (result i32) (get_local 31) (drop) (i32.const 1))
    (if
      (result i32)
      (then (i32.const 0))
      (else
        (block (result i32) (get_local 31) (drop) (i32.const 1))
        (if (result i32) (then (i32.const 0)) (else (unreachable)))
      )
    )
    (drop)
    (i32.const 0)
    (set_local 28)
    (block
      (result i32)
      (get_local 28)
      (set_local 29)
      (block
        (result i32)
        (get_local 29)
        (i32.const 5)
        (i32.eq)
        (if (then) (else (i32.const 0) (br 1)))
        (i32.const 1)
      )
      (if
        (then)
        (else
          (block
            (result i32)
            (get_local 29)
            (i32.const 6)
            (i32.eq)
            (if (then) (else (i32.const 0) (br 1)))
            (i32.const 1)
          )
          (if (then) (else (i32.const 0) (br 2)))
        )
      )
      (i32.const 1)
    )
    (if
      (result i32)
      (then (i32.const 0))
      (else
        (block
          (result i32)
          (get_local 28)
          (set_local 30)
          (block
            (result i32)
            (get_local 30)
            (i32.const 7)
            (i32.eq)
            (if (then) (else (i32.const 0) (br 1)))
            (i32.const 1)
          )
          (if
            (then)
            (else
              (block
                (result i32)
                (get_local 30)
                (i32.const 6)
                (i32.eq)
                (if (then) (else (i32.const 0) (br 1)))
                (i32.const 1)
              )
              (if (then) (else (i32.const 0) (br 2)))
            )
          )
          (i32.const 1)
        )
        (if (result i32) (then (i32.const 0)) (else (unreachable)))
      )
    )
    (drop)
    (get_global 0)
    (get_global 0)
    (i32.const 8)
    (i32.add)
    (set_global 0)
    (tee_local 2)
    (get_local 2)
    (i32.const 0)
    (i32.store)
    (tee_local 2)
    (get_local 2)
    (i32.const 0)
    (i32.store offset=4)
    (set_local 27)
    (block
      (result i32)
      (get_local 27)
      (tee_local 2)
      (get_local 2)
      (i32.load)
      (drop)
      (tee_local 2)
      (get_local 2)
      (i32.load offset=4)
      (drop)
      (drop)
      (i32.const 1)
    )
    (if
      (result i32)
      (then (i32.const 0))
      (else
        (block
          (result i32)
          (get_local 27)
          (tee_local 2)
          (get_local 2)
          (i32.load)
          (drop)
          (tee_local 2)
          (get_local 2)
          (i32.load offset=4)
          (i32.const 6)
          (i32.eq)
          (if (then) (else (i32.const 0) (br 1)))
          (drop)
          (i32.const 1)
        )
        (if (result i32) (then (i32.const 0)) (else (unreachable)))
      )
    )
    (drop)
    (get_global 0)
    (get_global 0)
    (i32.const 8)
    (i32.add)
    (set_global 0)
    (tee_local 2)
    (get_local 2)
    (i32.const 0)
    (i32.store)
    (tee_local 2)
    (get_local 2)
    (i32.const 0)
    (i32.store offset=4)
    (set_local 25)
    (block
      (result i32)
      (get_local 25)
      (tee_local 2)
      (get_local 2)
      (i32.load)
      (drop)
      (tee_local 2)
      (get_local 2)
      (i32.load offset=4)
      (set_local 26)
      (block
        (result i32)
        (get_local 26)
        (i32.const 6)
        (i32.eq)
        (if (then) (else (i32.const 0) (br 1)))
        (i32.const 1)
      )
      (if
        (then)
        (else
          (block (result i32) (get_local 26) (drop) (i32.const 1))
          (if (then) (else (i32.const 0) (br 2)))
        )
      )
      (drop)
      (i32.const 1)
    )
    (if
      (result i32)
      (then (i32.const 0))
      (else
        (block (result i32) (get_local 25) (drop) (i32.const 1))
        (if (result i32) (then (i32.const 0)) (else (unreachable)))
      )
    )
    (drop)
    (get_global 0)
    (get_global 0)
    (i32.const 8)
    (i32.add)
    (set_global 0)
    (tee_local 2)
    (get_local 2)
    (i32.const 0)
    (i32.store)
    (tee_local 2)
    (get_local 2)
    (i32.const 0)
    (i32.store offset=4)
    (set_local 24)
    (block
      (result i32)
      (get_local 24)
      (tee_local 2)
      (get_local 2)
      (i32.load)
      (i32.const 0)
      (i32.eq)
      (if (then) (else (i32.const 0) (br 1)))
      (tee_local 2)
      (get_local 2)
      (i32.load offset=4)
      (drop)
      (drop)
      (i32.const 1)
    )
    (if
      (result i32)
      (then (i32.const 0))
      (else
        (block
          (result i32)
          (get_local 24)
          (tee_local 2)
          (get_local 2)
          (i32.load)
          (drop)
          (tee_local 2)
          (get_local 2)
          (i32.load offset=4)
          (i32.const 0)
          (i32.eq)
          (if (then) (else (i32.const 0) (br 1)))
          (drop)
          (i32.const 1)
        )
        (if (result i32) (then (i32.const 0)) (else (unreachable)))
      )
    )
    (drop)
    (get_global 0)
    (get_global 0)
    (i32.const 8)
    (i32.add)
    (set_global 0)
    (tee_local 2)
    (get_local 2)
    (i32.const 0)
    (i32.store)
    (tee_local 2)
    (get_local 2)
    (i32.const 0)
    (i32.store offset=4)
    (set_local 23)
    (block
      (result i32)
      (get_local 23)
      (tee_local 2)
      (get_local 2)
      (i32.load)
      (i32.const 0)
      (i32.eq)
      (if (then) (else (i32.const 0) (br 1)))
      (tee_local 2)
      (get_local 2)
      (i32.load offset=4)
      (drop)
      (drop)
      (i32.const 1)
    )
    (if
      (result i32)
      (then (i32.const 0))
      (else
        (block
          (result i32)
          (get_local 23)
          (tee_local 2)
          (get_local 2)
          (i32.load)
          (drop)
          (tee_local 2)
          (get_local 2)
          (i32.load offset=4)
          (i32.const 0)
          (i32.eq)
          (if (then) (else (i32.const 0) (br 1)))
          (drop)
          (i32.const 1)
        )
        (if
          (result i32)
          (then (i32.const 0))
          (else
            (block (result i32) (get_local 23) (drop) (i32.const 1))
            (if (result i32) (then (i32.const 0)) (else (unreachable)))
          )
        )
      )
    )
  )
  (func $8
    (type 0)
    (local i32 i32 i32)
    (get_global 0)
    (get_global 0)
    (i32.const 4)
    (i32.add)
    (set_global 0)
    (set_local 1)
    (get_global 0)
    (get_global 0)
    (i32.const 4)
    (i32.add)
    (set_global 0)
    (tee_local 2)
    (get_local 1)
    (i32.store)
    (get_local 1)
    (i32.const 7)
    (i32.store)
    (get_local 1)
    (drop)
  )
  (start 8)
  (elem 0 (offset (i32.const 0)) 0 1 2 3 4 5 6 7 8)
)
Interpreting the .wat:
