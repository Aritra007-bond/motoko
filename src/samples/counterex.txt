
Checking counterex.as:
  type Counter <: actor {dec : () -> (); read : () -> async Int}
  Counter : Int -> Counter
  c : Counter
  show : (Text, Int) -> ()
  showAsync : (Text, async Int) -> ()
  testDec : () -> ()
  testRead : () -> async ()

Interpreting counterex.as (tracing function calls):
  testDec()
  testDec() => ()
  testRead()
  testRead() => async ?#0
  dec()
  show("dec", 10)
  show("dec", 10) => ()
  dec() => ()
  dec()
  show("dec", 9)
  show("dec", 9) => ()
  dec() => ()
  dec()
  show("dec", 8)
  show("dec", 8) => ()
  dec() => ()
  dec()
  show("dec", 7)
  show("dec", 7) => ()
  dec() => ()
  dec()
  show("dec", 6)
  show("dec", 6) => ()
  dec() => ()
  dec()
  show("dec", 5)
  show("dec", 5) => ()
  dec() => ()
  dec()
  show("dec", 4)
  show("dec", 4) => ()
  dec() => ()
  dec()
  show("dec", 3)
  show("dec", 3) => ()
  dec() => ()
  dec()
  show("dec", 2)
  show("dec", 2) => ()
  dec() => ()
  dec()
  show("dec", 1)
  show("dec", 1) => ()
  dec() => ()
  showAsync("before", async ?#0)
  showAsync("before", async ?#0) => ()
  dec()
  show("dec", 0)
  show("dec", 0) => ()
  dec() => ()
  read()
  read() => async ?#0
  show("await", -1)
  show("await", -1) => ()
  showAsync("after", async -1#0)
  showAsync("after", async -1#0) => ()
  showAsync("before", async ?#0)
  showAsync("before", async ?#0) => ()
  dec()
  show("dec", -1)
  show("dec", -1) => ()
  dec() => ()
  read()
  read() => async ?#0
  show("await", -2)
  show("await", -2) => ()
  showAsync("after", async -2#0)
  showAsync("after", async -2#0) => ()
  showAsync("before", async ?#0)
  showAsync("before", async ?#0) => ()
  dec()
  show("dec", -2)
  show("dec", -2) => ()
  dec() => ()
  read()
  read() => async ?#0
  show("await", -3)
  show("await", -3) => ()
  showAsync("after", async -3#0)
  showAsync("after", async -3#0) => ()
  showAsync("before", async ?#0)
  showAsync("before", async ?#0) => ()
  dec()
  show("dec", -3)
  show("dec", -3) => ()
  dec() => ()
  read()
  read() => async ?#0
  show("await", -4)
  show("await", -4) => ()
  showAsync("after", async -4#0)
  showAsync("after", async -4#0) => ()
  showAsync("before", async ?#0)
  showAsync("before", async ?#0) => ()
  dec()
  show("dec", -4)
  show("dec", -4) => ()
  dec() => ()
  read()
  read() => async ?#0
  show("await", -5)
  show("await", -5) => ()
  showAsync("after", async -5#0)
  showAsync("after", async -5#0) => ()
  showAsync("before", async ?#0)
  showAsync("before", async ?#0) => ()
  dec()
  show("dec", -5)
  show("dec", -5) => ()
  dec() => ()
  read()
  read() => async ?#0
  show("await", -6)
  show("await", -6) => ()
  showAsync("after", async -6#0)
  showAsync("after", async -6#0) => ()
  showAsync("before", async ?#0)
  showAsync("before", async ?#0) => ()
  dec()
  show("dec", -6)
  show("dec", -6) => ()
  dec() => ()
  read()
  read() => async ?#0
  show("await", -7)
  show("await", -7) => ()
  showAsync("after", async -7#0)
  showAsync("after", async -7#0) => ()
  showAsync("before", async ?#0)
  showAsync("before", async ?#0) => ()
  dec()
  show("dec", -7)
  show("dec", -7) => ()
  dec() => ()
  read()
  read() => async ?#0
  show("await", -8)
  show("await", -8) => ()
  showAsync("after", async -8#0)
  showAsync("after", async -8#0) => ()
  showAsync("before", async ?#0)
  showAsync("before", async ?#0) => ()
  dec()
  show("dec", -8)
  show("dec", -8) => ()
  dec() => ()
  read()
  read() => async ?#0
  show("await", -9)
  show("await", -9) => ()
  showAsync("after", async -9#0)
  showAsync("after", async -9#0) => ()
  showAsync("before", async ?#0)
  showAsync("before", async ?#0) => ()
  dec()
  show("dec", -9)
  show("dec", -9) => ()
  dec() => ()
  read()
  read() => async ?#0
  show("await", -10)
  show("await", -10) => ()
  showAsync("after", async -10#0)
  showAsync("after", async -10#0) => ()

Final state counterex.as:
  Counter = func
  c = Counter
  show = func
  showAsync = func
  testDec = func
  testRead = func
