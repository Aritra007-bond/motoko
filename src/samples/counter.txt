-- Checking counter.as:
type Counter <: actor {dec : () -> (); read : () -> async Int}
let Counter : Int -> Counter
let c : Counter
let show : (Text, Int) -> ()
let showAsync : (Text, async Int) -> ()
let testDec : () -> ()
let testRead : () -> ()
-- Interpreting counter.as:
Counter(10)
  <= {c = 10; dec = func; read = func}
testDec()
  -> message dec()
  -> message dec()
  -> message dec()
  -> message dec()
  -> message dec()
  -> message dec()
  -> message dec()
  -> message dec()
  -> message dec()
  -> message dec()
  <= ()
testRead()
  -> async counter.as:37.11-46.4
  <= ()
<- message dec()
  dec()
    show("dec", 10)
      <= ()
    <= ()
<- message dec()
  dec()
    show("dec", 9)
      <= ()
    <= ()
<- message dec()
  dec()
    show("dec", 8)
      <= ()
    <= ()
<- message dec()
  dec()
    show("dec", 7)
      <= ()
    <= ()
<- message dec()
  dec()
    show("dec", 6)
      <= ()
    <= ()
<- message dec()
  dec()
    show("dec", 5)
      <= ()
    <= ()
<- message dec()
  dec()
    show("dec", 4)
      <= ()
    <= ()
<- message dec()
  dec()
    show("dec", 3)
      <= ()
    <= ()
<- message dec()
  dec()
    show("dec", 2)
      <= ()
    <= ()
<- message dec()
  dec()
    show("dec", 1)
      <= ()
    <= ()
<- async counter.as:37.11-46.4
  -> message dec()
  -> message read()
  showAsync("before", async _ #0)
    <= ()
  => await counter.as:42.21-42.28
<- message dec()
  dec()
    show("dec", 0)
      <= ()
    <= ()
<- message read()
  read()
    -> async counter.as:13.22-13.27
    <= async _ #0
<- async counter.as:13.22-13.27
  <= -1
<- await counter.as:42.21-42.28(-1)
  show("await", -1)
    <= ()
  showAsync("after", async -1 #0)
    <= ()
  -> message dec()
  -> message read()
  showAsync("before", async _ #0)
    <= ()
  => await counter.as:42.21-42.28
<- message dec()
  dec()
    show("dec", -1)
      <= ()
    <= ()
<- message read()
  read()
    -> async counter.as:13.22-13.27
    <= async _ #0
<- async counter.as:13.22-13.27
  <= -2
<- await counter.as:42.21-42.28(-2)
  show("await", -2)
    <= ()
  showAsync("after", async -2 #0)
    <= ()
  -> message dec()
  -> message read()
  showAsync("before", async _ #0)
    <= ()
  => await counter.as:42.21-42.28
<- message dec()
  dec()
    show("dec", -2)
      <= ()
    <= ()
<- message read()
  read()
    -> async counter.as:13.22-13.27
    <= async _ #0
<- async counter.as:13.22-13.27
  <= -3
<- await counter.as:42.21-42.28(-3)
  show("await", -3)
    <= ()
  showAsync("after", async -3 #0)
    <= ()
  -> message dec()
  -> message read()
  showAsync("before", async _ #0)
    <= ()
  => await counter.as:42.21-42.28
<- message dec()
  dec()
    show("dec", -3)
      <= ()
    <= ()
<- message read()
  read()
    -> async counter.as:13.22-13.27
    <= async _ #0
<- async counter.as:13.22-13.27
  <= -4
<- await counter.as:42.21-42.28(-4)
  show("await", -4)
    <= ()
  showAsync("after", async -4 #0)
    <= ()
  -> message dec()
  -> message read()
  showAsync("before", async _ #0)
    <= ()
  => await counter.as:42.21-42.28
<- message dec()
  dec()
    show("dec", -4)
      <= ()
    <= ()
<- message read()
  read()
    -> async counter.as:13.22-13.27
    <= async _ #0
<- async counter.as:13.22-13.27
  <= -5
<- await counter.as:42.21-42.28(-5)
  show("await", -5)
    <= ()
  showAsync("after", async -5 #0)
    <= ()
  -> message dec()
  -> message read()
  showAsync("before", async _ #0)
    <= ()
  => await counter.as:42.21-42.28
<- message dec()
  dec()
    show("dec", -5)
      <= ()
    <= ()
<- message read()
  read()
    -> async counter.as:13.22-13.27
    <= async _ #0
<- async counter.as:13.22-13.27
  <= -6
<- await counter.as:42.21-42.28(-6)
  show("await", -6)
    <= ()
  showAsync("after", async -6 #0)
    <= ()
  -> message dec()
  -> message read()
  showAsync("before", async _ #0)
    <= ()
  => await counter.as:42.21-42.28
<- message dec()
  dec()
    show("dec", -6)
      <= ()
    <= ()
<- message read()
  read()
    -> async counter.as:13.22-13.27
    <= async _ #0
<- async counter.as:13.22-13.27
  <= -7
<- await counter.as:42.21-42.28(-7)
  show("await", -7)
    <= ()
  showAsync("after", async -7 #0)
    <= ()
  -> message dec()
  -> message read()
  showAsync("before", async _ #0)
    <= ()
  => await counter.as:42.21-42.28
<- message dec()
  dec()
    show("dec", -7)
      <= ()
    <= ()
<- message read()
  read()
    -> async counter.as:13.22-13.27
    <= async _ #0
<- async counter.as:13.22-13.27
  <= -8
<- await counter.as:42.21-42.28(-8)
  show("await", -8)
    <= ()
  showAsync("after", async -8 #0)
    <= ()
  -> message dec()
  -> message read()
  showAsync("before", async _ #0)
    <= ()
  => await counter.as:42.21-42.28
<- message dec()
  dec()
    show("dec", -8)
      <= ()
    <= ()
<- message read()
  read()
    -> async counter.as:13.22-13.27
    <= async _ #0
<- async counter.as:13.22-13.27
  <= -9
<- await counter.as:42.21-42.28(-9)
  show("await", -9)
    <= ()
  showAsync("after", async -9 #0)
    <= ()
  -> message dec()
  -> message read()
  showAsync("before", async _ #0)
    <= ()
  => await counter.as:42.21-42.28
<- message dec()
  dec()
    show("dec", -9)
      <= ()
    <= ()
<- message read()
  read()
    -> async counter.as:13.22-13.27
    <= async _ #0
<- async counter.as:13.22-13.27
  <= -10
<- await counter.as:42.21-42.28(-10)
  show("await", -10)
    <= ()
  showAsync("after", async -10 #0)
    <= ()
  <= ()
-- Finished counter.as:
let Counter : Int -> Counter = func
let c : Counter = Counter
let show : (Text, Int) -> () = func
let showAsync : (Text, async Int) -> () = func
let testDec : () -> () = func
let testRead : () -> () = func

