ASC=../src/asc
OUTDIR=_out
DOCDIR=doc
MDofAS=./markdown-of-actorscript.py
PANDOC=pandoc

## VT100 stuff
#HRULE="\x1b[2;34m----------------------------------------------------------------\x1b[0m"
#MODULE_NAME="\x1b[1;32mModule:\x1b[1;34m"
#BEGIN="\x1b[0;1mBegin...\x1b[0m"
#DONE="\x1b[1mDone.\n"$(HRULE)
#MODULE_NAME_COLOR="\x1b[0;1;34m"
#NO_COLOR="\x1b[0m"

# Add new module targets here:
MODULES=\
	Hash \
	List \
	ListTest \
	AssocList \
	Trie \
	DocTable \
	Set \
	SetDb \
	SetDbTest \
	ProduceExchange \


OUTFILES=$(addsuffix .out, $(MODULES))

OUTPATHS=$(addprefix $(OUTDIR)/, $(OUTFILES))

.PHONY: default all clean alltests alldoc docMd docHtml

default: all

docmsg:
	@echo Begin building documentation in \`$(DOCDIR)\`...
	@echo $(HRULE)

alltests: $(OUTDIR) $(OUTPATHS)

all: alltests alldoc

alldoc: docMd docHtml

# Markdown documentation, extracted from the source directory
docMd: \
	$(DOCDIR)/README.md \
	$(DOCDIR)/prelude.md \
	$(DOCDIR)/hash.md \
	$(DOCDIR)/list.md \
	$(DOCDIR)/assocList.md \
	$(DOCDIR)/trie.md \
	$(DOCDIR)/docTable.md \
	$(DOCDIR)/set.md \
	$(DOCDIR)/setDb.md \
	$(DOCDIR)/setDbTest.md \
	$(DOCDIR)/examples/produce-exchange/README.md \
	$(DOCDIR)/examples/produce-exchange/serverTypes.md \
	$(DOCDIR)/examples/produce-exchange/serverActor.md \
	$(DOCDIR)/examples/produce-exchange/serverModelTypes.md \
	$(DOCDIR)/examples/produce-exchange/serverModel.md \
	| \
	$(DOCDIR)/ \
	$(DOCDIR)/examples/produce-exchange/

# HTML documentation, extracted from the source directory
docHtml: \
	$(DOCDIR)/README.html \
	$(DOCDIR)/prelude.html \
	$(DOCDIR)/hash.html \
	$(DOCDIR)/list.html \
	$(DOCDIR)/assocList.html \
	$(DOCDIR)/trie.html \
	$(DOCDIR)/docTable.html \
	$(DOCDIR)/set.html \
	$(DOCDIR)/setDb.html \
	$(DOCDIR)/setDbTest.html \
	$(DOCDIR)/examples/produce-exchange/README.html \
	$(DOCDIR)/examples/produce-exchange/serverTypes.html \
	$(DOCDIR)/examples/produce-exchange/serverActor.html \
	$(DOCDIR)/examples/produce-exchange/serverModelTypes.html \
	$(DOCDIR)/examples/produce-exchange/serverModel.html \
	| \
	$(DOCDIR)/ \
	$(DOCDIR)/examples/produce-exchange/

clean:
	rm -rf $(OUTDIR) $(DOCDIR)

$(OUTDIR):
	@mkdir $@

$(DOCDIR):
	mkdir $@

$(DOCDIR)/README.md: README.md | $(DOCDIR)
	@echo "<!-- **[ DO NOT EDIT -- GENERATED by a Makefile, on `date` ]** -->" > $@
	@echo "" >> $@
	@cat $< >> $@

$(DOCDIR)/examples/produce-exchange/: README.md
	@mkdir -p $@

$(DOCDIR)/examples/produce-exchange/README.md: examples/produce-exchange/README.md | $(DOCDIR)/examples/produce-exchange/
	@echo "<!-- **[ DO NOT EDIT -- GENERATED by a Makefile, on `date` ]** -->" > $@
	@echo "" >> $@
	@cat $< >> $@

$(OUTDIR)/Hash.out: prelude.as hash.as | $(OUTDIR)
#	@echo $(MODULE_NAME) $(basename $(notdir $@))
#	@echo $(BEGIN)
	$(ASC) -r $(filter-out $(OUTDIR), $^) > $@
#	@echo $(DONE)

$(OUTDIR)/List.out: prelude.as list.as | $(OUTDIR)
#	@echo $(MODULE_NAME) $(basename $(notdir $@))
#	@echo $(BEGIN)
	$(ASC) -r $(filter-out $(OUTDIR), $^) > $@
#	@echo $(DONE)

$(OUTDIR)/ListTest.out: prelude.as list.as listTest.as | $(OUTDIR)
#	@echo $(MODULE_NAME) $(basename $(notdir $@))
#	@echo $(BEGIN)
	$(ASC) -r $(filter-out $(OUTDIR), $^) > $@
#	@echo $(DONE)

$(OUTDIR)/AssocList.out: prelude.as list.as assocList.as | $(OUTDIR)
#	@echo $(MODULE_NAME) $(basename $(notdir $@))
#	@echo $(BEGIN)
	$(ASC) -r $(filter-out $(OUTDIR), $^) > $@
#	@echo $(DONE)

$(OUTDIR)/Trie.out: prelude.as hash.as list.as assocList.as trie.as | $(OUTDIR)
#	@echo $(MODULE_NAME) $(basename $(notdir $@))
#	@echo $(BEGIN)
	$(ASC) -r $(filter-out $(OUTDIR), $^) > $@
#	@echo $(DONE)

$(OUTDIR)/DocTable.out: prelude.as hash.as list.as assocList.as trie.as docTable.as | $(OUTDIR)
#	@echo $(MODULE_NAME) $(basename $(notdir $@))
#	@echo $(BEGIN)
	$(ASC) -r $(filter-out $(OUTDIR), $^) > $@
#	@echo $(DONE)

$(OUTDIR)/Set.out: prelude.as hash.as list.as assocList.as trie.as set.as | $(OUTDIR)
#	@echo $(MODULE_NAME) $(basename $(notdir $@))
#	@echo $(BEGIN)
	$(ASC) -r $(filter-out $(OUTDIR), $^) > $@
#	@echo $(DONE)

$(OUTDIR)/SetDb.out: prelude.as hash.as list.as assocList.as trie.as set.as setDb.as | $(OUTDIR)
#	@echo $(MODULE_NAME) $(basename $(notdir $@))
#	@echo $(BEGIN)
	$(ASC) -r $(filter-out $(OUTDIR), $^) > $@
#	@echo $(DONE)

$(OUTDIR)/SetDbTest.out: prelude.as hash.as list.as assocList.as trie.as set.as setDb.as setDbTest.as | $(OUTDIR)
#	@echo $(MODULE_NAME) $(basename $(notdir $@))
#	@echo $(BEGIN)
	$(ASC) -r $(filter-out $(OUTDIR), $^) > $@
#	@echo $(DONE)

$(OUTDIR)/ProduceExchange.out: prelude.as hash.as list.as assocList.as trie.as docTable.as \
	examples/produce-exchange/serverTypes.as \
	examples/produce-exchange/serverModelTypes.as \
	examples/produce-exchange/serverModel.as \
	examples/produce-exchange/serverActor.as \
	examples/produce-exchange/test/simpleSetupAndQuery.as | $(OUTDIR)
#	@echo $(MODULE_NAME) $(basename $(notdir $@))
#	@echo $(BEGIN)
	$(ASC) -r $(filter-out $(OUTDIR), $^) > $@
#	@echo $(DONE)

$(DOCDIR)/%.md: %.as $(MDofAS) | $(DOCDIR)
	@echo "<!-- **[ DO NOT EDIT -- GENERATED by a Makefile, on `date` ]** -->" > $@
	@echo "" >> $@
	@echo "" >> $@
	$(MDofAS) $< >> $@

$(DOCDIR)/%.html: $(DOCDIR)/%.md
	$(PANDOC) -f gfm $^ > $@


#########################################################################################
# TODO(Matthew): Figure out why this "compressed" version of the rules doesn't work.

# $(OUTDIR)/List.out: $(OUTDIR) list.as ;	@$(doModule)

# $(OUTDIR)/ListTest.out: $(OUTDIR) list.as listTest.as ; @$(doModule)

# $(OUTDIR)/Trie.out: $(OUTDIR) list.as trie.as ; @$(doModule)

# $(OUTDIR)/Set.out: $(OUTDIR) list.as trie.as set.as ; @$(doModule)

# $(OUTDIR)/SetDb.out: $(OUTDIR) list.as trie.as set.as setDb.as ; @$(doModule)

# $(OUTDIR)/SetDbTest.out: $(OUTDIR) list.as trie.as set.as setDb.as setDbTest.as ; @$(doModule)

# $(OUTDIR)/ProduceExchange.out: $(OUTDIR) list.as trie.as produceExchange.as ; @$(doModule)

# define doModule =
# @echo $(MODULE_NAME) $(basename $(notdir $@))
# @echo $(BEGIN)
# $(ASC) -r $(filter-out $(OUTDIR), $^) > $@
# @echo $(DONE)
# endef
